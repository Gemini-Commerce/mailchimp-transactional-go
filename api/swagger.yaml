---
swagger: "2.0"
info:
  version: "1.0.47"
  title: "Mailchimp Transactional API"
  contact:
    name: "API Support"
    email: "apihelp@mailchimp.com"
  x-permalink: "https://github.com/mailchimp/mailchimp-client-lib-codegen/blob/main/spec/transactional.json"
host: "mandrillapp.com"
basePath: "/api/1.0"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
- "application/xml"
- "application/x-php"
- "application/x-yaml; charset=utf-8"
paths:
  /allowlists/add:
    post:
      tags:
      - "allowlists"
      summary: "Add email to allowlist"
      description: "Adds an email to your email rejection allowlist. If the address\
        \ is currently on your denylist, that denylist entry will be removed automatically."
      operationId: "postAllowlistsAdd"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200"
      deprecated: false
      x-custom-config:
        methodNameCamel: "add"
        methodNameSnake: "add"
  /allowlists/list:
    post:
      tags:
      - "allowlists"
      summary: "List allowlisted emails"
      description: "Retrieves your email rejection allowlist. You can provide an email\
        \ address or search prefix to limit the results. Returns up to 1000 results."
      operationId: "postAllowlistsList"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_1"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "up to 1000 allowlist entries"
            items:
              $ref: "#/definitions/inline_response_200_1"
      deprecated: false
      x-custom-config:
        methodNameCamel: "list"
        methodNameSnake: "list"
  /allowlists/delete:
    post:
      tags:
      - "allowlists"
      summary: "Remove email from allowlist"
      description: "Removes an email address from the allowlist."
      operationId: "postAllowlistsDelete"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_2"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_2"
      deprecated: false
      x-custom-config:
        methodNameCamel: "delete"
        methodNameSnake: "delete"
  /exports/info:
    post:
      tags:
      - "exports"
      summary: "View export info"
      description: "Returns information about an export job. If the export job's state\
        \ is 'complete', the returned data will include a URL you can use to fetch\
        \ the results. Every export job produces a zip archive, but the format of\
        \ the archive is distinct for each job type. The api calls that initiate exports\
        \ include more details about the output format for that job type."
      operationId: "postExportsInfo"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_3"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_3"
      deprecated: false
      x-custom-config:
        methodNameCamel: "info"
        methodNameSnake: "info"
  /exports/list:
    post:
      tags:
      - "exports"
      summary: "List exports"
      description: "Returns a list of your exports."
      operationId: "postExportsList"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_4"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the account's exports"
            items:
              $ref: "#/definitions/inline_response_200_4"
      deprecated: false
      x-custom-config:
        methodNameCamel: "list"
        methodNameSnake: "list"
  /exports/rejects:
    post:
      tags:
      - "exports"
      summary: "Export denylist"
      description: "Begins an export of your rejection denylist. The denylist will\
        \ be exported to a zip archive containing a single file named rejects.csv\
        \ that includes the following fields: email, reason, detail, created_at, expires_at,\
        \ last_event_at, expires_at."
      operationId: "postExportsRejects"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_5"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_5"
      deprecated: false
      x-custom-config:
        methodNameCamel: "rejects"
        methodNameSnake: "rejects"
  /exports/whitelist:
    post:
      tags:
      - "exports"
      summary: "Export Allowlist"
      description: "Begins an export of your rejection allowlist. The allowlist will\
        \ be exported to a zip archive containing a single file named allowlist.csv\
        \ that includes the following fields: email, detail, created_at."
      operationId: "postExportsWhitelist"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_6"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_6"
      deprecated: false
      x-custom-config:
        methodNameCamel: "whitelist"
        methodNameSnake: "whitelist"
  /exports/allowlist:
    post:
      tags:
      - "exports"
      summary: "Export Allowlist"
      description: "Begins an export of your rejection allowlist. The allowlist will\
        \ be exported to a zip archive containing a single file named allowlist.csv\
        \ that includes the following fields: email, detail, created_at."
      operationId: "postExportsAllowlist"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_7"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_6"
      deprecated: false
      x-custom-config:
        methodNameCamel: "allowlist"
        methodNameSnake: "allowlist"
  /exports/activity:
    post:
      tags:
      - "exports"
      summary: "Export activity history"
      description: "Begins an export of your activity history. The activity will be\
        \ exported to a zip archive containing a single file named activity.csv in\
        \ the same format as you would be able to export from your account's activity\
        \ view. It includes the following fields: Date, Email Address, Sender, Subject,\
        \ Status, Tags, Opens, Clicks, Bounce Detail. If you have configured any custom\
        \ metadata fields, they will be included in the exported data."
      operationId: "postExportsActivity"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_8"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_7"
      deprecated: false
      x-custom-config:
        methodNameCamel: "activity"
        methodNameSnake: "activity"
  /inbound/domains:
    post:
      tags:
      - "inbound"
      summary: "List inbound domains"
      description: "List the domains that have been configured for inbound delivery."
      operationId: "postInboundDomains"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_9"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the inbound domains associated with the account"
            items:
              $ref: "#/definitions/inline_response_200_8"
      deprecated: false
      x-custom-config:
        methodNameCamel: "domains"
        methodNameSnake: "domains"
  /inbound/add-domain:
    post:
      tags:
      - "inbound"
      summary: "Add inbound domain"
      description: "Add an inbound domain to your account."
      operationId: "postInboundAddDomain"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_10"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_9"
      deprecated: false
      x-custom-config:
        methodNameCamel: "addDomain"
        methodNameSnake: "add_domain"
  /inbound/check-domain:
    post:
      tags:
      - "inbound"
      summary: "Check domain settings"
      description: "Check the MX settings for an inbound domain. The domain must have\
        \ already been added with the add-domain call."
      operationId: "postInboundCheckDomain"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_11"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_10"
      deprecated: false
      x-custom-config:
        methodNameCamel: "checkDomain"
        methodNameSnake: "check_domain"
  /inbound/delete-domain:
    post:
      tags:
      - "inbound"
      summary: "Delete inbound domain"
      description: "Delete an inbound domain from the account. All mail will stop\
        \ routing for this domain immediately."
      operationId: "postInboundDeleteDomain"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_12"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_11"
      deprecated: false
      x-custom-config:
        methodNameCamel: "deleteDomain"
        methodNameSnake: "delete_domain"
  /inbound/routes:
    post:
      tags:
      - "inbound"
      summary: "List mailbox routes"
      description: "List the mailbox routes defined for an inbound domain."
      operationId: "postInboundRoutes"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_13"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the routes associated with the domain"
            items:
              $ref: "#/definitions/inline_response_200_12"
      deprecated: false
      x-custom-config:
        methodNameCamel: "routes"
        methodNameSnake: "routes"
  /inbound/add-route:
    post:
      tags:
      - "inbound"
      summary: "Add mailbox route"
      description: "Add a new mailbox route to an inbound domain."
      operationId: "postInboundAddRoute"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_14"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_13"
      deprecated: false
      x-custom-config:
        methodNameCamel: "addRoute"
        methodNameSnake: "add_route"
  /inbound/update-route:
    post:
      tags:
      - "inbound"
      summary: "Update mailbox route"
      description: "Update the pattern or webhook of an existing inbound mailbox route.\
        \ If null is provided for any fields, the values will remain unchanged."
      operationId: "postInboundUpdateRoute"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_15"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_14"
      deprecated: false
      x-custom-config:
        methodNameCamel: "updateRoute"
        methodNameSnake: "update_route"
  /inbound/delete-route:
    post:
      tags:
      - "inbound"
      summary: "Delete mailbox route"
      description: "Delete an existing inbound mailbox route."
      operationId: "postInboundDeleteRoute"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_16"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_15"
      deprecated: false
      x-custom-config:
        methodNameCamel: "deleteRoute"
        methodNameSnake: "delete_route"
  /inbound/send-raw:
    post:
      tags:
      - "inbound"
      summary: "Send mime document"
      description: "Take a raw MIME document destined for a domain with inbound domains\
        \ set up, and send it to the inbound hook exactly as if it had been sent over\
        \ SMTP."
      operationId: "postInboundSendRaw"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_17"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "an array of the information for each recipient in the message\
              \ (usually one) that matched an inbound route"
            items:
              $ref: "#/definitions/inline_response_200_16"
      deprecated: false
      x-custom-config:
        methodNameCamel: "sendRaw"
        methodNameSnake: "send_raw"
  /ips/list:
    post:
      tags:
      - "ips"
      summary: "List ip addresses"
      description: "Lists your dedicated IPs."
      operationId: "postIpsList"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_18"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "an array of objects for each dedicated IP"
            items:
              $ref: "#/definitions/inline_response_200_17"
      deprecated: false
      x-custom-config:
        methodNameCamel: "list"
        methodNameSnake: "list"
  /ips/info:
    post:
      tags:
      - "ips"
      summary: "Get ip info"
      description: "Retrieves information about a single dedicated IP."
      operationId: "postIpsInfo"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_19"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_18"
      deprecated: false
      x-custom-config:
        methodNameCamel: "info"
        methodNameSnake: "info"
  /ips/provision:
    post:
      tags:
      - "ips"
      summary: "Request additional ip"
      description: "Requests an additional dedicated IP for your account. Accounts\
        \ may have one outstanding request at any time, and provisioning requests\
        \ are processed within 24 hours."
      operationId: "postIpsProvision"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_20"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_19"
      deprecated: false
      x-custom-config:
        methodNameCamel: "provision"
        methodNameSnake: "provision"
  /ips/start-warmup:
    post:
      tags:
      - "ips"
      summary: "Start ip warmup"
      description: "Begins the warmup process for a dedicated IP. During the warmup\
        \ process, the Transactional API will gradually increase the percentage of\
        \ your mail that is sent over the warming-up IP, over a period of roughly\
        \ 30 days. The rest of your mail will be sent over shared IPs or other dedicated\
        \ IPs in the same pool."
      operationId: "postIpsStartWarmup"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_21"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_20"
      deprecated: false
      x-custom-config:
        methodNameCamel: "startWarmup"
        methodNameSnake: "start_warmup"
  /ips/cancel-warmup:
    post:
      tags:
      - "ips"
      summary: "Cancel ip warmup"
      description: "Cancels the warmup process for a dedicated IP."
      operationId: "postIpsCancelWarmup"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_22"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_20"
      deprecated: false
      x-custom-config:
        methodNameCamel: "cancelWarmup"
        methodNameSnake: "cancel_warmup"
  /ips/set-pool:
    post:
      tags:
      - "ips"
      summary: "Move ip to different pool"
      description: "Moves a dedicated IP to a different pool."
      operationId: "postIpsSetPool"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_23"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_21"
      deprecated: false
      x-custom-config:
        methodNameCamel: "setPool"
        methodNameSnake: "set_pool"
  /ips/delete:
    post:
      tags:
      - "ips"
      summary: "Delete ip address"
      description: "Deletes a dedicated IP. This is permanent and cannot be undone."
      operationId: "postIpsDelete"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_24"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_22"
      deprecated: false
      x-custom-config:
        methodNameCamel: "delete"
        methodNameSnake: "delete"
  /ips/list-pools:
    post:
      tags:
      - "ips"
      summary: "List ip pools"
      description: "Lists your dedicated IP pools."
      operationId: "postIpsListPools"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_25"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the dedicated IP pools for your account, up to a maximum\
              \ of 1,000"
            items:
              $ref: "#/definitions/inline_response_200_23"
      deprecated: false
      x-custom-config:
        methodNameCamel: "listPools"
        methodNameSnake: "list_pools"
  /ips/pool-info:
    post:
      tags:
      - "ips"
      summary: "Get ip pool info"
      description: "Describes a single dedicated IP pool."
      operationId: "postIpsPoolInfo"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_26"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_24"
      deprecated: false
      x-custom-config:
        methodNameCamel: "poolInfo"
        methodNameSnake: "pool_info"
  /ips/create-pool:
    post:
      tags:
      - "ips"
      summary: "Add ip pool"
      description: "Creates a pool and returns it. If a pool already exists with this\
        \ name, no action will be performed."
      operationId: "postIpsCreatePool"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_27"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_24"
      deprecated: false
      x-custom-config:
        methodNameCamel: "createPool"
        methodNameSnake: "create_pool"
  /ips/delete-pool:
    post:
      tags:
      - "ips"
      summary: "Delete ip pool"
      description: "Deletes a pool. A pool must be empty before you can delete it,\
        \ and you cannot delete your default pool."
      operationId: "postIpsDeletePool"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_28"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_25"
      deprecated: false
      x-custom-config:
        methodNameCamel: "deletePool"
        methodNameSnake: "delete_pool"
  /ips/check-custom-dns:
    post:
      tags:
      - "ips"
      summary: "Test custom dns"
      description: "Tests whether a domain name is valid for use as the custom reverse\
        \ DNS for a dedicated IP."
      operationId: "postIpsCheckCustomDns"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_29"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_26"
      deprecated: false
      x-custom-config:
        methodNameCamel: "checkCustomDns"
        methodNameSnake: "check_custom_dns"
  /ips/set-custom-dns:
    post:
      tags:
      - "ips"
      summary: "Set custom dns"
      description: "Configures the custom DNS name for a dedicated IP."
      operationId: "postIpsSetCustomDns"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_30"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_27"
      deprecated: false
      x-custom-config:
        methodNameCamel: "setCustomDns"
        methodNameSnake: "set_custom_dns"
  /messages/send:
    post:
      tags:
      - "messages"
      summary: "Send new message"
      description: "Send a new transactional message through the Transactional API."
      operationId: "postMessagesSend"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_31"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "an array of objects for each recipient containing the key\
              \ \"email\" with the email address, and details of the message status\
              \ for that recipient"
            items:
              $ref: "#/definitions/inline_response_200_28"
      deprecated: false
      x-custom-config:
        methodNameCamel: "send"
        methodNameSnake: "send"
  /messages/send-template:
    post:
      tags:
      - "messages"
      summary: "Send using message template"
      description: "Send a new transactional message through the Transactional API\
        \ using a template."
      operationId: "postMessagesSendTemplate"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_32"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "an array of objects for each recipient containing the key\
              \ \"email\" with the email address, and details of the message status\
              \ for that recipient"
            items:
              $ref: "#/definitions/inline_response_200_29"
      deprecated: false
      x-custom-config:
        methodNameCamel: "sendTemplate"
        methodNameSnake: "send_template"
  /messages/search:
    post:
      tags:
      - "messages"
      summary: "Search messages by date"
      description: "Search recently sent messages and optionally narrow by date range,\
        \ tags, senders, and API keys. If no date range is specified, results within\
        \ the last 7 days are returned. This method may be called up to 20 times per\
        \ minute. If you need the data more often, you can use /messages/info.json\
        \ to get the information for a single message, or webhooks to push activity\
        \ to your own application for querying."
      operationId: "postMessagesSearch"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_33"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "an array of objects for each matching message"
            items:
              $ref: "#/definitions/inline_response_200_30"
      deprecated: false
      x-custom-config:
        methodNameCamel: "search"
        methodNameSnake: "search"
  /messages/search-time-series:
    post:
      tags:
      - "messages"
      summary: "Search messages by hour"
      description: "Search the content of recently sent messages and return the aggregated\
        \ hourly stats for matching messages."
      operationId: "postMessagesSearchTimeSeries"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_34"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the array of history information"
            items:
              $ref: "#/definitions/inline_response_200_31"
      deprecated: false
      x-custom-config:
        methodNameCamel: "searchTimeSeries"
        methodNameSnake: "search_time_series"
  /messages/info:
    post:
      tags:
      - "messages"
      summary: "Get message info"
      description: "Get the information for a single recently sent message."
      operationId: "postMessagesInfo"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_35"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_32"
      deprecated: false
      x-custom-config:
        methodNameCamel: "info"
        methodNameSnake: "info"
  /messages/content:
    post:
      tags:
      - "messages"
      summary: "Get message content"
      description: "Get the full content of a recently sent message."
      operationId: "postMessagesContent"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_36"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_33"
      deprecated: false
      x-custom-config:
        methodNameCamel: "content"
        methodNameSnake: "content"
  /messages/parse:
    post:
      tags:
      - "messages"
      summary: "Parse mime document"
      description: "Parse the full MIME document for an email message, returning the\
        \ content of the message broken into its constituent pieces."
      operationId: "postMessagesParse"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_37"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_34"
      deprecated: false
      x-custom-config:
        methodNameCamel: "parse"
        methodNameSnake: "parse"
  /messages/send-raw:
    post:
      tags:
      - "messages"
      summary: "Send mime document"
      description: "Take a raw MIME document for a message, and send it exactly as\
        \ if it were sent through the Transactional API's SMTP servers."
      operationId: "postMessagesSendRaw"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_38"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "object"
            description: ""
      deprecated: false
      x-custom-config:
        methodNameCamel: "sendRaw"
        methodNameSnake: "send_raw"
  /messages/list-scheduled:
    post:
      tags:
      - "messages"
      summary: "List scheduled emails"
      description: "Queries your scheduled emails."
      operationId: "postMessagesListScheduled"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_39"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "a list of up to 1000 scheduled emails"
            items:
              $ref: "#/definitions/inline_response_200_35"
      deprecated: false
      x-custom-config:
        methodNameCamel: "listScheduled"
        methodNameSnake: "list_scheduled"
  /messages/cancel-scheduled:
    post:
      tags:
      - "messages"
      summary: "Cancel scheduled email"
      description: "Cancels a scheduled email."
      operationId: "postMessagesCancelScheduled"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_40"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "information about the scheduled email that was cancelled."
            items:
              $ref: "#/definitions/inline_response_200_35"
      deprecated: false
      x-custom-config:
        methodNameCamel: "cancelScheduled"
        methodNameSnake: "cancel_scheduled"
  /messages/reschedule:
    post:
      tags:
      - "messages"
      summary: "Reschedule email"
      description: "Reschedules a scheduled email."
      operationId: "postMessagesReschedule"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_41"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "information about the scheduled email that was rescheduled."
            items:
              $ref: "#/definitions/inline_response_200_35"
      deprecated: false
      x-custom-config:
        methodNameCamel: "reschedule"
        methodNameSnake: "reschedule"
  /metadata/list:
    post:
      tags:
      - "metadata"
      summary: "List metadata fields"
      description: "Get the list of custom metadata fields indexed for the account."
      operationId: "postMetadataList"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_42"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the custom metadata fields for the account"
            items:
              $ref: "#/definitions/inline_response_200_36"
      deprecated: false
      x-custom-config:
        methodNameCamel: "list"
        methodNameSnake: "list"
  /metadata/add:
    post:
      tags:
      - "metadata"
      summary: "Add metadata field"
      description: "Add a new custom metadata field to be indexed for the account."
      operationId: "postMetadataAdd"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_43"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_37"
      deprecated: false
      x-custom-config:
        methodNameCamel: "add"
        methodNameSnake: "add"
  /metadata/update:
    post:
      tags:
      - "metadata"
      summary: "Update metadata field"
      description: "Update an existing custom metadata field."
      operationId: "postMetadataUpdate"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_44"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_38"
      deprecated: false
      x-custom-config:
        methodNameCamel: "update"
        methodNameSnake: "update"
  /metadata/delete:
    post:
      tags:
      - "metadata"
      summary: "Delete metadata field"
      description: "Delete an existing custom metadata field. Deletion isn't instataneous,\
        \ and /metadata/list will continue to return the field until the asynchronous\
        \ deletion process is complete."
      operationId: "postMetadataDelete"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_45"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_39"
      deprecated: false
      x-custom-config:
        methodNameCamel: "delete"
        methodNameSnake: "delete"
  /rejects/add:
    post:
      tags:
      - "rejects"
      summary: "Add email to denylist"
      description: "Adds an email to your email rejection denylist. Addresses that\
        \ you add manually will never expire and there is no reputation penalty for\
        \ removing them from your denylist. Attempting to denylist an address that\
        \ has been added to the allowlist will have no effect."
      operationId: "postRejectsAdd"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_46"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_40"
      deprecated: false
      x-custom-config:
        methodNameCamel: "add"
        methodNameSnake: "add"
  /rejects/list:
    post:
      tags:
      - "rejects"
      summary: "List denylisted emails"
      description: "Retrieves your email rejection denylist. You can provide an email\
        \ address to limit the results. Returns up to 1000 results. By default, entries\
        \ that have expired are excluded from the results; set include_expired to\
        \ true to include them."
      operationId: "postRejectsList"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_47"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "Up to 1000 rejection entries"
            items:
              $ref: "#/definitions/inline_response_200_41"
      deprecated: false
      x-custom-config:
        methodNameCamel: "list"
        methodNameSnake: "list"
  /rejects/delete:
    post:
      tags:
      - "rejects"
      summary: "Delete email from denylist"
      description: "Deletes an email rejection. There is no limit to how many rejections\
        \ you can remove from your denylist, but keep in mind that each deletion has\
        \ an affect on your reputation."
      operationId: "postRejectsDelete"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_48"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_42"
      deprecated: false
      x-custom-config:
        methodNameCamel: "delete"
        methodNameSnake: "delete"
  /senders/list:
    post:
      tags:
      - "senders"
      summary: "List account senders"
      description: "Return the senders that have tried to use this account."
      operationId: "postSendersList"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_49"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "an array of sender data, one for each sending addresses\
              \ used by the account"
            items:
              $ref: "#/definitions/inline_response_200_43"
      deprecated: false
      x-custom-config:
        methodNameCamel: "list"
        methodNameSnake: "list"
  /senders/domains:
    post:
      tags:
      - "senders"
      summary: "List sender domains"
      description: "Returns the sender domains that have been added to this account."
      operationId: "postSendersDomains"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_50"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "an array of sender domain data, one for each sending domain\
              \ used by the account"
            items:
              $ref: "#/definitions/inline_response_200_44"
      deprecated: false
      x-custom-config:
        methodNameCamel: "domains"
        methodNameSnake: "domains"
  /senders/add-domain:
    post:
      tags:
      - "senders"
      summary: "Add sender domain"
      description: "Adds a sender domain to your account. Sender domains are added\
        \ automatically as you send, but you can use this call to add them ahead of\
        \ time."
      operationId: "postSendersAddDomain"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_51"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_45"
      deprecated: false
      x-custom-config:
        methodNameCamel: "addDomain"
        methodNameSnake: "add_domain"
  /senders/check-domain:
    post:
      tags:
      - "senders"
      summary: "Check domain settings"
      description: "Checks the SPF and DKIM settings for a domain, as well the domain\
        \ verification. If you haven't already added this domain to your account,\
        \ it will be added automatically."
      operationId: "postSendersCheckDomain"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_52"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_46"
      deprecated: false
      x-custom-config:
        methodNameCamel: "checkDomain"
        methodNameSnake: "check_domain"
  /senders/verify-domain:
    post:
      tags:
      - "senders"
      summary: "Verify domain"
      description: "Sends a verification email in order to verify ownership of a domain.\
        \ Domain verification is a required step to confirm ownership of a domain.\
        \ Once a domain has been verified in a Transactional API account, other accounts\
        \ may not have their messages signed by that domain unless they also verify\
        \ the domain. This prevents other Transactional API accounts from sending\
        \ mail signed by your domain."
      operationId: "postSendersVerifyDomain"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_53"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_47"
      deprecated: false
      x-custom-config:
        methodNameCamel: "verifyDomain"
        methodNameSnake: "verify_domain"
  /senders/info:
    post:
      tags:
      - "senders"
      summary: "Get sender info"
      description: "Return more detailed information about a single sender, including\
        \ aggregates of recent stats."
      operationId: "postSendersInfo"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_54"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_48"
      deprecated: false
      x-custom-config:
        methodNameCamel: "info"
        methodNameSnake: "info"
  /senders/time-series:
    post:
      tags:
      - "senders"
      summary: "View sender history"
      description: "Return the recent history (hourly stats for the last 30 days)\
        \ for a sender."
      operationId: "postSendersTimeSeries"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_55"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the array of history information"
            items:
              $ref: "#/definitions/inline_response_200_49"
      deprecated: false
      x-custom-config:
        methodNameCamel: "timeSeries"
        methodNameSnake: "time_series"
  /subaccounts/list:
    post:
      tags:
      - "subaccounts"
      summary: "List subaccounts"
      description: "Get the list of subaccounts defined for the account, optionally\
        \ filtered by a prefix."
      operationId: "postSubaccountsList"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_56"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the subaccounts for the account, up to a maximum of 1,000"
            items:
              $ref: "#/definitions/inline_response_200_50"
      deprecated: false
      x-custom-config:
        methodNameCamel: "list"
        methodNameSnake: "list"
  /subaccounts/add:
    post:
      tags:
      - "subaccounts"
      summary: "Add subaccount"
      description: "Add a new subaccount."
      operationId: "postSubaccountsAdd"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_57"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_51"
      deprecated: false
      x-custom-config:
        methodNameCamel: "add"
        methodNameSnake: "add"
  /subaccounts/info:
    post:
      tags:
      - "subaccounts"
      summary: "Get subaccount info"
      description: "Given the ID of an existing subaccount, return the data about\
        \ it."
      operationId: "postSubaccountsInfo"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_58"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_52"
      deprecated: false
      x-custom-config:
        methodNameCamel: "info"
        methodNameSnake: "info"
  /subaccounts/update:
    post:
      tags:
      - "subaccounts"
      summary: "Update subaccount"
      description: "Update an existing subaccount."
      operationId: "postSubaccountsUpdate"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_59"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_53"
      deprecated: false
      x-custom-config:
        methodNameCamel: "update"
        methodNameSnake: "update"
  /subaccounts/delete:
    post:
      tags:
      - "subaccounts"
      summary: "Delete subaccount"
      description: "Delete an existing subaccount. Any email related to the subaccount\
        \ will be saved, but stats will be removed and any future sending calls to\
        \ this subaccount will fail."
      operationId: "postSubaccountsDelete"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_60"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_54"
      deprecated: false
      x-custom-config:
        methodNameCamel: "delete"
        methodNameSnake: "delete"
  /subaccounts/pause:
    post:
      tags:
      - "subaccounts"
      summary: "Pause subaccount"
      description: "Pause a subaccount's sending. Any future emails delivered to this\
        \ subaccount will be queued for a maximum of 3 days until the subaccount is\
        \ resumed."
      operationId: "postSubaccountsPause"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_61"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_55"
      deprecated: false
      x-custom-config:
        methodNameCamel: "pause"
        methodNameSnake: "pause"
  /subaccounts/resume:
    post:
      tags:
      - "subaccounts"
      summary: "Resume subaccount"
      description: "Resume a paused subaccount's sending."
      operationId: "postSubaccountsResume"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_62"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_56"
      deprecated: false
      x-custom-config:
        methodNameCamel: "resume"
        methodNameSnake: "resume"
  /tags/list:
    post:
      tags:
      - "tags"
      summary: "List tags"
      description: "Return all of the user-defined tag information."
      operationId: "postTagsList"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_63"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "a list of user-defined tags"
            items:
              $ref: "#/definitions/inline_response_200_57"
      deprecated: false
      x-custom-config:
        methodNameCamel: "list"
        methodNameSnake: "list"
  /tags/delete:
    post:
      tags:
      - "tags"
      summary: "Delete tag"
      description: "Deletes a tag permanently. Deleting a tag removes the tag from\
        \ any messages that have been sent, and also deletes the tag's stats. There\
        \ is no way to undo this operation, so use it carefully."
      operationId: "postTagsDelete"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_64"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_58"
      deprecated: false
      x-custom-config:
        methodNameCamel: "delete"
        methodNameSnake: "delete"
  /tags/info:
    post:
      tags:
      - "tags"
      summary: "Get tag info"
      description: "Return more detailed information about a single tag, including\
        \ aggregates of recent stats."
      operationId: "postTagsInfo"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_65"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_59"
      deprecated: false
      x-custom-config:
        methodNameCamel: "info"
        methodNameSnake: "info"
  /tags/time-series:
    post:
      tags:
      - "tags"
      summary: "View tag history"
      description: "Return the recent history (hourly stats for the last 30 days)\
        \ for a tag."
      operationId: "postTagsTimeSeries"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_66"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the array of history information"
            items:
              $ref: "#/definitions/inline_response_200_31"
      deprecated: false
      x-custom-config:
        methodNameCamel: "timeSeries"
        methodNameSnake: "time_series"
  /tags/all-time-series:
    post:
      tags:
      - "tags"
      summary: "View all tags history"
      description: "Return the recent history (hourly stats for the last 30 days)\
        \ for all tags."
      operationId: "postTagsAllTimeSeries"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_67"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the array of history information"
            items:
              $ref: "#/definitions/inline_response_200_31"
      deprecated: false
      x-custom-config:
        methodNameCamel: "allTimeSeries"
        methodNameSnake: "all_time_series"
  /templates/add:
    post:
      tags:
      - "templates"
      summary: "Add template"
      description: "Add a new template."
      operationId: "postTemplatesAdd"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_68"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_60"
      deprecated: false
      x-custom-config:
        methodNameCamel: "add"
        methodNameSnake: "add"
  /templates/info:
    post:
      tags:
      - "templates"
      summary: "Get template info"
      description: "Get the information for an existing template."
      operationId: "postTemplatesInfo"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_69"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_61"
      deprecated: false
      x-custom-config:
        methodNameCamel: "info"
        methodNameSnake: "info"
  /templates/update:
    post:
      tags:
      - "templates"
      summary: "Update template"
      description: "Update the code for an existing template. If null is provided\
        \ for any fields, the values will remain unchanged."
      operationId: "postTemplatesUpdate"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_70"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_62"
      deprecated: false
      x-custom-config:
        methodNameCamel: "update"
        methodNameSnake: "update"
  /templates/publish:
    post:
      tags:
      - "templates"
      summary: "Publish template content"
      description: "Publish the content for the template. Any new messages sent using\
        \ this template will start using the content that was previously in draft."
      operationId: "postTemplatesPublish"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_71"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_63"
      deprecated: false
      x-custom-config:
        methodNameCamel: "publish"
        methodNameSnake: "publish"
  /templates/delete:
    post:
      tags:
      - "templates"
      summary: "Delete template"
      description: "Delete a template."
      operationId: "postTemplatesDelete"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_72"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_64"
      deprecated: false
      x-custom-config:
        methodNameCamel: "delete"
        methodNameSnake: "delete"
  /templates/list:
    post:
      tags:
      - "templates"
      summary: "List templates"
      description: "Return a list of all the templates available to this user."
      operationId: "postTemplatesList"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_73"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "an array of structs with information about each template"
            items:
              $ref: "#/definitions/inline_response_200_65"
      deprecated: false
      x-custom-config:
        methodNameCamel: "list"
        methodNameSnake: "list"
  /templates/time-series:
    post:
      tags:
      - "templates"
      summary: "Get template history"
      description: "Return the recent history (hourly stats for the last 30 days)\
        \ for a template."
      operationId: "postTemplatesTimeSeries"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_74"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the array of history information"
            items:
              $ref: "#/definitions/inline_response_200_49"
      deprecated: false
      x-custom-config:
        methodNameCamel: "timeSeries"
        methodNameSnake: "time_series"
  /templates/render:
    post:
      tags:
      - "templates"
      summary: "Render html template"
      description: "Inject content and optionally merge fields into a template, returning\
        \ the HTML that results."
      operationId: "postTemplatesRender"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_75"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_66"
      deprecated: false
      x-custom-config:
        methodNameCamel: "render"
        methodNameSnake: "render"
  /urls/list:
    post:
      tags:
      - "urls"
      summary: "List most clicked urls"
      description: "Get the 100 most clicked URLs."
      operationId: "postUrlsList"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_76"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the 100 most clicked URLs and their stats"
            items:
              $ref: "#/definitions/inline_response_200_67"
      deprecated: true
      x-custom-config:
        methodNameCamel: "list"
        methodNameSnake: "list"
  /urls/search:
    post:
      tags:
      - "urls"
      summary: "Search most clicked urls"
      description: "Return the 100 most clicked URLs that match the search query given."
      operationId: "postUrlsSearchDeprecated"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_77"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the 100 most clicked URLs matching the search query"
            items:
              $ref: "#/definitions/inline_response_200_68"
      deprecated: true
      x-custom-config:
        methodNameCamel: "search"
        methodNameSnake: "search"
  /urls/time-series:
    post:
      tags:
      - "urls"
      summary: "Get url history"
      description: "Return the recent history (hourly stats for the last 30 days)\
        \ for a URL"
      operationId: "postUrlsTimeSeries"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_78"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the array of history information"
            items:
              $ref: "#/definitions/inline_response_200_69"
      deprecated: true
      x-custom-config:
        methodNameCamel: "timeSeries"
        methodNameSnake: "time_series"
  /urls/tracking-domains:
    post:
      tags:
      - "urls"
      summary: "List tracking domains"
      description: "Get the list of tracking domains set up for this account."
      operationId: "postUrlsTrackingDomains"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_79"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the tracking domains and their status"
            items:
              $ref: "#/definitions/inline_response_200_70"
      deprecated: false
      x-custom-config:
        methodNameCamel: "trackingDomains"
        methodNameSnake: "tracking_domains"
  /urls/add-tracking-domain:
    post:
      tags:
      - "urls"
      summary: "Add tracking domains"
      description: "Add a tracking domain to your account."
      operationId: "postUrlsAddTrackingDomain"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_80"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_71"
      deprecated: false
      x-custom-config:
        methodNameCamel: "addTrackingDomain"
        methodNameSnake: "add_tracking_domain"
  /urls/check-tracking-domain:
    post:
      tags:
      - "urls"
      summary: "Check cname settings"
      description: "Checks the CNAME settings for a tracking domain. The domain must\
        \ have been added already with the add-tracking-domain call."
      operationId: "postUrlsCheckTrackingDomain"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_81"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_71"
      deprecated: false
      x-custom-config:
        methodNameCamel: "checkTrackingDomain"
        methodNameSnake: "check_tracking_domain"
  /users/info:
    post:
      tags:
      - "users"
      summary: "Get user info"
      description: "Return the information about the API-connected user."
      operationId: "postUsersInfo"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_82"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_72"
      deprecated: false
      x-custom-config:
        methodNameCamel: "info"
        methodNameSnake: "info"
  /users/ping:
    post:
      tags:
      - "users"
      summary: "Ping"
      description: "Validate an API key and respond to a ping."
      operationId: "postUsersPing"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_83"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "string"
            description: "the string \"PONG!\""
            example: "PONG!"
      deprecated: false
      x-custom-config:
        methodNameCamel: "ping"
        methodNameSnake: "ping"
  /users/ping2:
    post:
      tags:
      - "users"
      summary: "Ping 2"
      description: "Validate an API key and respond to a ping (JSON parser version)."
      operationId: "postUsersPing2"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_84"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_73"
      deprecated: false
      x-custom-config:
        methodNameCamel: "ping2"
        methodNameSnake: "ping2"
  /users/senders:
    post:
      tags:
      - "users"
      summary: "List account senders"
      description: "Return the senders that have tried to use this account, both verified\
        \ and unverified."
      operationId: "postUsersSenders"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_85"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "an array of sender data, one for each sending addresses\
              \ used by the account"
            items:
              $ref: "#/definitions/inline_response_200_43"
      deprecated: false
      x-custom-config:
        methodNameCamel: "senders"
        methodNameSnake: "senders"
  /webhooks/list:
    post:
      tags:
      - "webhooks"
      summary: "List webhooks"
      description: "Get the list of all webhooks defined on the account."
      operationId: "postWebhooksList"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_86"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "the webhooks associated with the account"
            items:
              $ref: "#/definitions/inline_response_200_74"
      deprecated: false
      x-custom-config:
        methodNameCamel: "list"
        methodNameSnake: "list"
  /webhooks/add:
    post:
      tags:
      - "webhooks"
      summary: "Add webhook"
      description: "Add a new webhook."
      operationId: "postWebhooksAdd"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_87"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_75"
      deprecated: false
      x-custom-config:
        methodNameCamel: "add"
        methodNameSnake: "add"
  /webhooks/info:
    post:
      tags:
      - "webhooks"
      summary: "Get webhook info"
      description: "Given the ID of an existing webhook, return the data about it."
      operationId: "postWebhooksInfo"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_88"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_76"
      deprecated: false
      x-custom-config:
        methodNameCamel: "info"
        methodNameSnake: "info"
  /webhooks/update:
    post:
      tags:
      - "webhooks"
      summary: "Update webhook"
      description: "Update an existing webhook."
      operationId: "postWebhooksUpdate"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_89"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_77"
      deprecated: false
      x-custom-config:
        methodNameCamel: "update"
        methodNameSnake: "update"
  /webhooks/delete:
    post:
      tags:
      - "webhooks"
      summary: "Delete webhook"
      description: "Delete an existing webhook."
      operationId: "postWebhooksDelete"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_90"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_78"
      deprecated: false
      x-custom-config:
        methodNameCamel: "delete"
        methodNameSnake: "delete"
  /whitelists/add:
    post:
      tags:
      - "whitelists"
      summary: "Add email to allowlist"
      description: "Adds an email to your email rejection allowlist. If the address\
        \ is currently on your denylist, that denylist entry will be removed automatically."
      operationId: "postWhitelistsAdd"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_91"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200"
      deprecated: false
      x-custom-config:
        methodNameCamel: "add"
        methodNameSnake: "add"
  /whitelists/list:
    post:
      tags:
      - "whitelists"
      summary: "List allowlisted emails"
      description: "Retrieves your email rejection allowlist. You can provide an email\
        \ address or search prefix to limit the results. Returns up to 1000 results."
      operationId: "postWhitelistsList"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_92"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            description: "up to 1000 allowlist entries"
            items:
              $ref: "#/definitions/inline_response_200_1"
      deprecated: false
      x-custom-config:
        methodNameCamel: "list"
        methodNameSnake: "list"
  /whitelists/delete:
    post:
      tags:
      - "whitelists"
      summary: "Remove email from allowlist"
      description: "Removes an email address from the allowlist."
      operationId: "postWhitelistsDelete"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_93"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_2"
      deprecated: false
      x-custom-config:
        methodNameCamel: "delete"
        methodNameSnake: "delete"
definitions:
  body:
    type: "object"
    required:
    - "email"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      email:
        type: "string"
        format: "email"
        description: "an email address to add to the allowlist"
      comment:
        type: "string"
        description: "an optional description of why the email was added to the allowlist"
        maxLength: 255
  inline_response_200:
    type: "object"
    properties:
      email:
        type: "string"
        description: "the email address you provided"
      added:
        type: "boolean"
        description: "whether the operation succeeded"
    description: "a status object containing the address and the result of the operation"
    example:
      added: true
      email: "email"
  body_1:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      email:
        type: "string"
        format: "email"
        description: "an optional email address or prefix to search by"
  inline_response_200_1:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
        description: "the email that is allowlisted"
      detail:
        type: "string"
        description: "a description of why the email was allowlisted"
      created_at:
        type: "string"
        format: "date-time"
        description: "when the email was added to the allowlist"
    description: "the information for each allowlist entry"
    example:
      created_at: "2000-01-23T04:56:07.000+00:00"
      detail: "detail"
      email: "email"
  body_2:
    type: "object"
    required:
    - "email"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      email:
        type: "string"
        format: "email"
        description: "the email address to remove from the allowlist"
  inline_response_200_2:
    type: "object"
    properties:
      email:
        type: "string"
        description: "the email address that was removed from the denylist"
      deleted:
        type: "boolean"
        description: "whether the address was deleted successfully"
    description: "a status object containing the address and whether the deletion\
      \ succeeded"
    example:
      deleted: true
      email: "email"
  body_3:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "an export job identifier"
  inline_response_200_3:
    type: "object"
    properties:
      id:
        type: "string"
        description: "the unique identifier for this Export. Use this identifier when\
          \ checking the export job's status"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the export job was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      type:
        type: "string"
        description: "the type of the export job - activity, reject, or allowlist"
      finished_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the export job was finished as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      state:
        type: "string"
        description: "the export job's state - waiting, working, complete, error,\
          \ or expired."
      result_url:
        type: "string"
        description: "the url for the export job's results, if the job is completed."
    description: "the information about the export"
    example:
      result_url: "result_url"
      finished_at: "2000-01-23T04:56:07.000+00:00"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      state: "state"
      type: "type"
  body_4:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  inline_response_200_4:
    type: "object"
    properties:
      id:
        type: "string"
        description: "the unique identifier for this Export. Use this identifier when\
          \ checking the export job's status"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the export job was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      type:
        type: "string"
        description: "the type of the export job - activity, reject, or allowlist"
      finished_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the export job was finished as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      state:
        type: "string"
        description: "the export job's state - waiting, working, complete, error,\
          \ or expired."
      result_url:
        type: "string"
        description: "the url for the export job's results, if the job is completed."
    description: "the individual export info"
    example:
      result_url: "result_url"
      finished_at: "2000-01-23T04:56:07.000+00:00"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      state: "state"
      type: "type"
  body_5:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      notify_email:
        type: "string"
        format: "email"
        description: "an optional email address to notify when the export job has\
          \ finished."
  inline_response_200_5:
    type: "object"
    properties:
      id:
        type: "string"
        description: "the unique identifier for this Export. Use this identifier when\
          \ checking the export job's status"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the export job was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      type:
        type: "string"
        description: "the type of the export job - activity, reject, or whitelist"
      finished_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the export job was finished as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      state:
        type: "string"
        description: "the export job's state - waiting, working, complete, error,\
          \ or expired."
      result_url:
        type: "string"
        description: "the url for the export job's results, if the job is completed."
    description: "information about the rejects export job that was started"
    example:
      result_url: "result_url"
      finished_at: "2000-01-23T04:56:07.000+00:00"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      state: "state"
      type: "type"
  body_6:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      notify_email:
        type: "string"
        format: "email"
        description: "an optional email address to notify when the export job has\
          \ finished."
  inline_response_200_6:
    type: "object"
    properties:
      id:
        type: "string"
        description: "the unique identifier for this Export. Use this identifier when\
          \ checking the export job's status"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the export job was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      type:
        type: "string"
        description: "the type of the export job"
      finished_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the export job was finished as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format, or null for jobs that have not run"
      state:
        type: "string"
        description: "the export job's state"
      result_url:
        type: "string"
        description: "the url for the export job's results, if the job is complete"
    description: "information about the allowlist export job that was started"
    example:
      result_url: "result_url"
      finished_at: "2000-01-23T04:56:07.000+00:00"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      state: "state"
      type: "type"
  body_7:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      notify_email:
        type: "string"
        format: "email"
        description: "an optional email address to notify when the export job has\
          \ finished."
  body_8:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      notify_email:
        type: "string"
        format: "email"
        description: "an optional email address to notify when the export job has\
          \ finished"
      date_from:
        type: "string"
        format: "date-time"
        description: "start date as a UTC string in YYYY-MM-DD HH:MM:SS format"
      date_to:
        type: "string"
        format: "date-time"
        description: "end date as a UTC string in YYYY-MM-DD HH:MM:SS format"
      tags:
        type: "array"
        description: "an array of tag names to narrow the export to; will match messages\
          \ that contain ANY of the tags"
        items:
          type: "string"
          description: "a tag name"
      senders:
        type: "array"
        description: "an array of senders to narrow the export to"
        items:
          type: "string"
          description: "a sender address"
      states:
        type: "array"
        description: "an array of message states to narrow the export to; messages\
          \ with ANY of the states will be included"
        items:
          type: "string"
          description: "a message state"
          enum:
          - "sent"
          - "rejected"
          - "bounced"
          - "soft-bounced"
          - "spam"
          - "unsub"
      api_keys:
        type: "array"
        description: "an array of api keys to narrow the export to; messsagse sent\
          \ with ANY of the keys will be included"
        items:
          type: "string"
          description: "an API key associated with your account"
  inline_response_200_7:
    type: "object"
    properties:
      id:
        type: "string"
        description: "the unique identifier for this Export. Use this identifier when\
          \ checking the export job's status"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the export job was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      type:
        type: "string"
        description: "the type of the export job"
      finished_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the export job was finished as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format, or null for jobs that have not run"
      state:
        type: "string"
        description: "the export job's state"
      result_url:
        type: "string"
        description: "the url for the export job's results, if the job is complete"
    description: "information about the activity export job that was started"
    example:
      result_url: "result_url"
      finished_at: "2000-01-23T04:56:07.000+00:00"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      state: "state"
      type: "type"
  body_9:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  inline_response_200_8:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "the domain name that is accepting mail"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the inbound domain was added as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      valid_mx:
        type: "boolean"
        description: "true if this inbound domain has successfully set up an MX record\
          \ to deliver mail to the Mandrill servers"
    description: "the individual domain info"
    example:
      domain: "domain"
      valid_mx: true
      created_at: "2000-01-23T04:56:07.000+00:00"
  body_10:
    type: "object"
    required:
    - "domain"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      domain:
        type: "string"
        description: "a domain name; Validation: strip_tags, required"
  inline_response_200_9:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "the domain name that is accepting mail"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the inbound domain was added as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      valid_mx:
        type: "boolean"
        description: "true if this inbound domain has successfully set up an MX record\
          \ to deliver mail to the Mandrill servers"
    description: "information about the domain"
    example:
      domain: "domain"
      valid_mx: true
      created_at: "2000-01-23T04:56:07.000+00:00"
  body_11:
    type: "object"
    required:
    - "domain"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      domain:
        type: "string"
        description: "an existing inbound domain"
  inline_response_200_10:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "the domain name that is accepting mail"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the inbound domain was added as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      valid_mx:
        type: "boolean"
        description: "true if this inbound domain has successfully set up an MX record\
          \ to deliver mail to the Mandrill servers"
    description: "information about the inbound domain"
    example:
      domain: "domain"
      valid_mx: true
      created_at: "2000-01-23T04:56:07.000+00:00"
  body_12:
    type: "object"
    required:
    - "domain"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      domain:
        type: "string"
        description: "an existing inbound domain"
  inline_response_200_11:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "the domain name that is accepting mail"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the inbound domain was added as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      valid_mx:
        type: "boolean"
        description: "true if this inbound domain has successfully set up an MX record\
          \ to deliver mail to the Mandrill servers"
    description: "information about the deleted domain"
    example:
      domain: "domain"
      valid_mx: true
      created_at: "2000-01-23T04:56:07.000+00:00"
  body_13:
    type: "object"
    required:
    - "domain"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      domain:
        type: "string"
        description: "the domain to check"
  inline_response_200_12:
    type: "object"
    properties:
      id:
        type: "string"
        description: "the unique identifier of the route"
      pattern:
        type: "string"
        description: "the search pattern that the mailbox name should match"
      url:
        type: "string"
        description: "the webhook URL where inbound messages will be published"
    description: "the individual mailbox route"
    example:
      pattern: "pattern"
      id: "id"
      url: "url"
  body_14:
    type: "object"
    required:
    - "domain"
    - "key"
    - "pattern"
    - "url"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      domain:
        type: "string"
        description: "an existing inbound domain"
      pattern:
        type: "string"
        description: "the search pattern that the mailbox name should match"
      url:
        type: "string"
        description: "the webhook URL where the inbound messages will be published"
  inline_response_200_13:
    type: "object"
    properties:
      id:
        type: "string"
        description: "the unique identifier of the route"
      pattern:
        type: "string"
        description: "the search pattern that the mailbox name should match"
      url:
        type: "string"
        description: "the webhook URL where inbound messages will be published"
    description: "the added mailbox route information"
    example:
      pattern: "pattern"
      id: "id"
      url: "url"
  body_15:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "the unique identifier of an existing mailbox route"
      pattern:
        type: "string"
        description: "the search pattern that the mailbox name should match"
      url:
        type: "string"
        description: "the webhook URL where the inbound messages will be published;\
          \ Validation: webhookexists"
  inline_response_200_14:
    type: "object"
    properties:
      id:
        type: "string"
        description: "the unique identifier of the route"
      pattern:
        type: "string"
        description: "the search pattern that the mailbox name should match"
      url:
        type: "string"
        description: "the webhook URL where inbound messages will be published"
    description: "the updated mailbox route information"
    example:
      pattern: "pattern"
      id: "id"
      url: "url"
  body_16:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "the unique identifier of an existing route"
  inline_response_200_15:
    type: "object"
    properties:
      id:
        type: "string"
        description: "the unique identifier of the route"
      pattern:
        type: "string"
        description: "the search pattern that the mailbox name should match"
      url:
        type: "string"
        description: "the webhook URL where inbound messages will be published"
    description: "the deleted mailbox route information"
    example:
      pattern: "pattern"
      id: "id"
      url: "url"
  body_17:
    type: "object"
    required:
    - "key"
    - "raw_message"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      raw_message:
        type: "string"
        description: "the full MIME document of an email message"
      to:
        type: "array"
        description: "optionally define the recipients to receive the message - otherwise\
          \ we'll use the To, Cc, and Bcc headers provided in the document"
        items:
          type: "string"
          format: "email"
          description: "the email address of the recipient"
      mail_from:
        type: "string"
        format: "email"
        description: "the address specified in the MAIL FROM stage of the SMTP conversation.\
          \ Required for the SPF check."
      helo:
        type: "string"
        description: "the identification provided by the client mta in the MTA state\
          \ of the SMTP conversation. Required for the SPF check."
      client_address:
        type: "string"
        description: "the remote MTA's ip address. Optional; required for the SPF\
          \ check."
  inline_response_200_16:
    type: "object"
    properties:
      email:
        type: "string"
        description: "the email address of the matching recipient"
      pattern:
        type: "string"
        description: "the mailbox route pattern that the recipient matched"
      url:
        type: "string"
        description: "the webhook URL that the message was posted to"
    description: "the individual recipient information"
    example:
      pattern: "pattern"
      email: "email"
      url: "url"
  body_18:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  ipslist_custom_dns:
    type: "object"
    properties:
      enabled:
        type: "boolean"
        description: "a boolean indicating whether custom dns has been configured\
          \ for this ip"
      valid:
        type: "boolean"
        description: "whether the ip's custom dns is currently valid"
      error:
        type: "string"
        description: "if the ip's custom dns is invalid, this will include details\
          \ about the error"
    description: "information about the ip's custom dns, if it has been configured"
    example:
      valid: true
      error: "error"
      enabled: true
  ipslist_warmup:
    type: "object"
    properties:
      warming_up:
        type: "boolean"
        description: "whether the ip is currently in warmup mode"
      start_at:
        type: "string"
        format: "date-time"
        description: "the start time for the warmup process as a UTC string in YYYY-MM-DD\
          \ HH:MM:SS format"
      end_at:
        type: "string"
        format: "date-time"
        description: "the end date and time for the warmup process as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
    description: "information about the ip's warmup status"
    example:
      end_at: "2000-01-23T04:56:07.000+00:00"
      warming_up: true
      start_at: "2000-01-23T04:56:07.000+00:00"
  inline_response_200_17:
    type: "object"
    properties:
      ip:
        type: "string"
        description: "the ip address"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the dedicated IP was created as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      pool:
        type: "string"
        description: "the name of the pool that this dedicated IP belongs to"
      domain:
        type: "string"
        description: "the domain name (reverse dns) of this dedicated IP"
      custom_dns:
        $ref: "#/definitions/ipslist_custom_dns"
      warmup:
        $ref: "#/definitions/ipslist_warmup"
    description: "information about a single dedicated IP"
    example:
      custom_dns:
        valid: true
        error: "error"
        enabled: true
      ip: "ip"
      domain: "domain"
      pool: "pool"
      created_at: "2000-01-23T04:56:07.000+00:00"
      warmup:
        end_at: "2000-01-23T04:56:07.000+00:00"
        warming_up: true
        start_at: "2000-01-23T04:56:07.000+00:00"
  body_19:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      ip:
        type: "string"
        description: "a dedicated IP address"
  inline_response_200_18:
    type: "object"
    properties:
      ip:
        type: "string"
        description: "the ip address"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the dedicated IP was created as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      pool:
        type: "string"
        description: "the name of the pool that this dedicated IP belongs to"
      domain:
        type: "string"
        description: "the domain name (reverse dns) of this dedicated IP"
      custom_dns:
        $ref: "#/definitions/ipslist_custom_dns"
      warmup:
        $ref: "#/definitions/ipslist_warmup"
    description: "Information about the dedicated ip"
    example:
      custom_dns:
        valid: true
        error: "error"
        enabled: true
      ip: "ip"
      domain: "domain"
      pool: "pool"
      created_at: "2000-01-23T04:56:07.000+00:00"
      warmup:
        end_at: "2000-01-23T04:56:07.000+00:00"
        warming_up: true
        start_at: "2000-01-23T04:56:07.000+00:00"
  body_20:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      warmup:
        type: "boolean"
        description: "whether to enable warmup mode for the ip"
      pool:
        type: "string"
        description: "the id of the pool to add the dedicated ip to, or null to use\
          \ your account's default pool"
  inline_response_200_19:
    type: "object"
    properties:
      requested_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the request was created as a UTC timestamp\
          \ in YYYY-MM-DD HH:MM:SS format"
    description: "a description of the provisioning request that was created"
    example:
      requested_at: "2000-01-23T04:56:07.000+00:00"
  body_21:
    type: "object"
    required:
    - "ip"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      ip:
        type: "string"
        description: "a dedicated ip address"
  inline_response_200_20:
    type: "object"
    properties:
      ip:
        type: "string"
        description: "the ip address"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the dedicated IP was created as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      pool:
        type: "string"
        description: "the name of the pool that this dedicated IP belongs to"
      domain:
        type: "string"
        description: "the domain name (reverse dns) of this dedicated IP"
      custom_dns:
        $ref: "#/definitions/ipslist_custom_dns"
      warmup:
        $ref: "#/definitions/ipslist_warmup"
    description: "Information about the dedicated IP"
    example:
      custom_dns:
        valid: true
        error: "error"
        enabled: true
      ip: "ip"
      domain: "domain"
      pool: "pool"
      created_at: "2000-01-23T04:56:07.000+00:00"
      warmup:
        end_at: "2000-01-23T04:56:07.000+00:00"
        warming_up: true
        start_at: "2000-01-23T04:56:07.000+00:00"
  body_22:
    type: "object"
    required:
    - "ip"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      ip:
        type: "string"
        description: "a dedicated ip address"
  body_23:
    type: "object"
    required:
    - "ip"
    - "key"
    - "pool"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      ip:
        type: "string"
        description: "a dedicated ip address"
      pool:
        type: "string"
        description: "the name of the new pool to add the dedicated ip to"
      create_pool:
        type: "boolean"
        description: "whether to create the pool if it does not exist; if false and\
          \ the pool does not exist, an Unknown_Pool will be thrown."
  inline_response_200_21:
    type: "object"
    properties:
      ip:
        type: "string"
        description: "the ip address"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the dedicated IP was created as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      pool:
        type: "string"
        description: "the name of the pool that this dedicated IP belongs to"
      domain:
        type: "string"
        description: "the domain name (reverse dns) of this dedicated IP"
      custom_dns:
        $ref: "#/definitions/ipslist_custom_dns"
      warmup:
        $ref: "#/definitions/ipslist_warmup"
    description: "Information about the updated state of the dedicated IP"
    example:
      custom_dns:
        valid: true
        error: "error"
        enabled: true
      ip: "ip"
      domain: "domain"
      pool: "pool"
      created_at: "2000-01-23T04:56:07.000+00:00"
      warmup:
        end_at: "2000-01-23T04:56:07.000+00:00"
        warming_up: true
        start_at: "2000-01-23T04:56:07.000+00:00"
  body_24:
    type: "object"
    required:
    - "ip"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      ip:
        type: "string"
        description: "the dedicated ip to remove from your account"
  inline_response_200_22:
    type: "object"
    properties:
      ip:
        type: "string"
        description: "the ip address"
      deleted:
        type: "string"
        description: "a boolean indicating whether the ip was successfully deleted"
    description: "a description of the ip that was removed from your account."
    example:
      deleted: "deleted"
      ip: "ip"
  body_25:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  ipslistpools_ips:
    type: "object"
    properties:
      ip:
        type: "string"
        description: "the ip address"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the dedicated IP was created as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      pool:
        type: "string"
        description: "the name of the pool that this dedicated IP belongs to"
      domain:
        type: "string"
        description: "the domain name (reverse dns) of this dedicated IP"
      custom_dns:
        $ref: "#/definitions/ipslist_custom_dns"
      warmup:
        $ref: "#/definitions/ipslist_warmup"
    description: "information about each dedicated IP"
    example:
      custom_dns:
        valid: true
        error: "error"
        enabled: true
      ip: "ip"
      domain: "domain"
      pool: "pool"
      created_at: "2000-01-23T04:56:07.000+00:00"
      warmup:
        end_at: "2000-01-23T04:56:07.000+00:00"
        warming_up: true
        start_at: "2000-01-23T04:56:07.000+00:00"
  inline_response_200_23:
    type: "object"
    properties:
      name:
        type: "string"
        description: "this pool's name"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that this pool was created as a UTC timestamp\
          \ in YYYY-MM-DD HH:MM:SS format"
      ips:
        type: "array"
        description: "the dedicated IPs in this pool"
        items:
          $ref: "#/definitions/ipslistpools_ips"
    description: "information about each dedicated IP pool"
    example:
      name: "name"
      created_at: "2000-01-23T04:56:07.000+00:00"
      ips:
      - custom_dns:
          valid: true
          error: "error"
          enabled: true
        ip: "ip"
        domain: "domain"
        pool: "pool"
        created_at: "2000-01-23T04:56:07.000+00:00"
        warmup:
          end_at: "2000-01-23T04:56:07.000+00:00"
          warming_up: true
          start_at: "2000-01-23T04:56:07.000+00:00"
      - custom_dns:
          valid: true
          error: "error"
          enabled: true
        ip: "ip"
        domain: "domain"
        pool: "pool"
        created_at: "2000-01-23T04:56:07.000+00:00"
        warmup:
          end_at: "2000-01-23T04:56:07.000+00:00"
          warming_up: true
          start_at: "2000-01-23T04:56:07.000+00:00"
  body_26:
    type: "object"
    required:
    - "key"
    - "pool"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      pool:
        type: "string"
        description: "a pool name"
  inline_response_200_24:
    type: "object"
    properties:
      name:
        type: "string"
        description: "this pool's name"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that this pool was created as a UTC timestamp\
          \ in YYYY-MM-DD HH:MM:SS format"
      ips:
        type: "array"
        description: "the dedicated IPs in this pool"
        items:
          $ref: "#/definitions/ipslistpools_ips"
    description: "Information about the dedicated ip pool"
    example:
      name: "name"
      created_at: "2000-01-23T04:56:07.000+00:00"
      ips:
      - custom_dns:
          valid: true
          error: "error"
          enabled: true
        ip: "ip"
        domain: "domain"
        pool: "pool"
        created_at: "2000-01-23T04:56:07.000+00:00"
        warmup:
          end_at: "2000-01-23T04:56:07.000+00:00"
          warming_up: true
          start_at: "2000-01-23T04:56:07.000+00:00"
      - custom_dns:
          valid: true
          error: "error"
          enabled: true
        ip: "ip"
        domain: "domain"
        pool: "pool"
        created_at: "2000-01-23T04:56:07.000+00:00"
        warmup:
          end_at: "2000-01-23T04:56:07.000+00:00"
          warming_up: true
          start_at: "2000-01-23T04:56:07.000+00:00"
  body_27:
    type: "object"
    required:
    - "key"
    - "pool"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      pool:
        type: "string"
        description: "the name of a pool to create"
  body_28:
    type: "object"
    required:
    - "key"
    - "pool"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      pool:
        type: "string"
        description: "the name of the pool to delete"
  inline_response_200_25:
    type: "object"
    properties:
      pool:
        type: "string"
        description: "the name of the pool"
      deleted:
        type: "boolean"
        description: "whether the pool was deleted"
    description: "information about the status of the pool that was deleted"
    example:
      deleted: true
      pool: "pool"
  body_29:
    type: "object"
    required:
    - "domain"
    - "ip"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      ip:
        type: "string"
        description: "a dedicated ip address"
      domain:
        type: "string"
        description: "the domain name to test"
  inline_response_200_26:
    type: "object"
    properties:
      valid:
        type: "string"
        description: "whether the domain name has a correctly-configured A record\
          \ pointing to the ip address"
      error:
        type: "string"
        description: "if valid is false, this will contain details about why the domain's\
          \ A record is incorrect"
    description: "information about the dedicated IP's new configuration"
    example:
      valid: "valid"
      error: "error"
  body_30:
    type: "object"
    required:
    - "domain"
    - "ip"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      ip:
        type: "string"
        description: "a dedicated ip address"
      domain:
        type: "string"
        description: "a domain name to set as the dedicated IP's custom dns name."
  inline_response_200_27:
    type: "object"
    properties:
      ip:
        type: "string"
        description: "the ip address"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the dedicated IP was created as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      pool:
        type: "string"
        description: "the name of the pool that this dedicated IP belongs to"
      domain:
        type: "string"
        description: "the domain name (reverse dns) of this dedicated IP"
      custom_dns:
        $ref: "#/definitions/ipslist_custom_dns"
      warmup:
        $ref: "#/definitions/ipslist_warmup"
    description: "information about the dedicated IP's new configuration"
    example:
      custom_dns:
        valid: true
        error: "error"
        enabled: true
      ip: "ip"
      domain: "domain"
      pool: "pool"
      created_at: "2000-01-23T04:56:07.000+00:00"
      warmup:
        end_at: "2000-01-23T04:56:07.000+00:00"
        warming_up: true
        start_at: "2000-01-23T04:56:07.000+00:00"
  messagessend_message_to:
    type: "object"
    required:
    - "email"
    properties:
      email:
        type: "string"
        format: "email"
        description: "the email address of the recipient"
      name:
        type: "string"
        description: "the optional display name to use for the recipient"
      type:
        type: "string"
        description: "the header type to use for the recipient, defaults to \"to\"\
          \ if not provided"
        enum:
        - "to"
        - "cc"
        - "bcc"
    description: "a single recipient's information"
  messagessend_message_global_merge_vars:
    type: "object"
    properties:
      name:
        type: "string"
        description: "the global merge variable's name. Merge variable names are case-insensitive\
          \ and may not start with _"
      content:
        type: "string"
        description: "the global merge variable's content"
    description: "a single global merge variable"
  messagessend_message_vars:
    type: "object"
    properties:
      name:
        type: "string"
        description: "the merge variable's name. Merge variable names are case-insensitive\
          \ and may not start with _"
      content:
        type: "string"
        description: "the merge variable's content"
  messagessend_message_merge_vars:
    type: "object"
    required:
    - "rcpt"
    properties:
      rcpt:
        type: "string"
        format: "email"
        description: "the email address of the recipient that the merge variables\
          \ should apply to"
      vars:
        type: "array"
        description: "the recipient's merge variables"
        items:
          $ref: "#/definitions/messagessend_message_vars"
    description: "per-recipient merge variables"
  messagessend_message_metadata:
    type: "object"
    properties:
      website:
        type: "string"
        description: "a valid website url"
    description: "metadata an associative array of user metadata. Mandrill will store\
      \ this metadata and make it available for retrieval. In addition, you can select\
      \ up to 10 metadata fields to index and make searchable using the Mandrill search\
      \ api."
  messagessend_message_values:
    type: "object"
    properties:
      user_id:
        type: "integer"
        description: ""
    description: "an associated array containing the recipient's unique metadata.\
      \ If a key exists in both the per-recipient metadata and the global metadata,\
      \ the per-recipient metadata will be used."
  messagessend_message_recipient_metadata:
    type: "object"
    properties:
      rcpt:
        type: "string"
        format: "email"
        description: "the email address of the recipient that the metadata is associated\
          \ with"
      values:
        $ref: "#/definitions/messagessend_message_values"
    description: "metadata for a single recipient"
  messagessend_message_attachments:
    type: "object"
    properties:
      type:
        type: "string"
        description: "the MIME type of the attachment"
      name:
        type: "string"
        description: "the file name of the attachment"
      content:
        type: "string"
        description: "the content of the attachment as a base64-encoded string"
    description: "a single supported attachment"
  messagessend_message_images:
    type: "object"
    properties:
      type:
        type: "string"
        description: "the MIME type of the image - must start with \"image/\""
      name:
        type: "string"
        description: "the Content ID of the image - use <img src=\"cid:THIS_VALUE\"\
          > to reference the image in your HTML content"
      content:
        type: "string"
        description: "the content of the image as a base64-encoded string"
    description: "a single embedded image"
  messagessend_message:
    type: "object"
    properties:
      html:
        type: "string"
        description: "the full HTML content to be sent"
      text:
        type: "string"
        description: "optional full text content to be sent"
      subject:
        type: "string"
        description: "the message subject"
      from_email:
        type: "string"
        format: "email"
        description: "the sender email address"
      from_name:
        type: "string"
        description: "optional from name to be used"
      to:
        type: "array"
        description: "an array of recipient information."
        items:
          $ref: "#/definitions/messagessend_message_to"
      headers:
        type: "object"
        description: "optional extra headers to add to the message (most headers are\
          \ allowed)"
        properties: {}
      important:
        type: "boolean"
        description: "whether or not this message is important, and should be delivered\
          \ ahead of non-important messages"
      track_opens:
        type: "boolean"
        description: "whether or not to turn on open tracking for the message"
      track_clicks:
        type: "boolean"
        description: "whether or not to turn on click tracking for the message"
      auto_text:
        type: "boolean"
        description: "whether or not to automatically generate a text part for messages\
          \ that are not given text"
      auto_html:
        type: "boolean"
        description: "whether or not to automatically generate an HTML part for messages\
          \ that are not given HTML"
      inline_css:
        type: "boolean"
        description: "whether or not to automatically inline all CSS styles provided\
          \ in the message HTML - only for HTML documents less than 256KB in size"
      url_strip_qs:
        type: "boolean"
        description: "whether or not to strip the query string from URLs when aggregating\
          \ tracked URL data"
      preserve_recipients:
        type: "boolean"
        description: "whether or not to expose all recipients in to \"To\" header\
          \ for each email"
      view_content_link:
        type: "boolean"
        description: "set to false to remove content logging for sensitive emails"
      bcc_address:
        type: "string"
        format: "email"
        description: "an optional address to receive an exact copy of each recipient's\
          \ email"
      tracking_domain:
        type: "string"
        description: "a custom domain to use for tracking opens and clicks instead\
          \ of mandrillapp.com"
      signing_domain:
        type: "string"
        description: "a custom domain to use for SPF/DKIM signing instead of mandrill\
          \ (for \"via\" or \"on behalf of\" in email clients)"
      return_path_domain:
        type: "string"
        description: "a custom domain to use for the messages's return-path"
      merge:
        type: "boolean"
        description: "whether to evaluate merge tags in the message. Will automatically\
          \ be set to true if either merge_vars or global_merge_vars are provided."
      merge_language:
        type: "string"
        description: "the merge tag language to use when evaluating merge tags, either\
          \ mailchimp or handlebars"
        enum:
        - "mailchimp"
        - "handlebars"
      global_merge_vars:
        type: "array"
        description: "global merge variables to use for all recipients. You can override\
          \ these per recipient."
        items:
          $ref: "#/definitions/messagessend_message_global_merge_vars"
      merge_vars:
        type: "array"
        description: "per-recipient merge variables, which override global merge variables\
          \ with the same name."
        items:
          $ref: "#/definitions/messagessend_message_merge_vars"
      tags:
        type: "array"
        description: "an array of string to tag the message with. Stats are accumulated\
          \ using tags, though we only store the first 100 we see, so this should\
          \ not be unique or change frequently. Tags should be 50 characters or less.\
          \ Any tags starting with an underscore are reserved for internal use and\
          \ will cause errors."
        items:
          type: "string"
          description: "a single tag - must not start with an underscore"
      subaccount:
        type: "string"
        description: "the unique id of a subaccount for this message - must already\
          \ exist or will fail with an error"
      google_analytics_domains:
        type: "array"
        description: "an array of strings indicating for which any matching URLs will\
          \ automatically have Google Analytics parameters appended to their query\
          \ string automatically."
        items:
          type: "string"
      google_analytics_campaign:
        type: "string"
        format: "email"
        description: "optional string indicating the value to set for the utm_campaign\
          \ tracking parameter. If this isn't provided the email's from address will\
          \ be used instead."
      metadata:
        $ref: "#/definitions/messagessend_message_metadata"
      recipient_metadata:
        type: "array"
        description: "Per-recipient metadata that will override the global values\
          \ specified in the metadata parameter."
        items:
          $ref: "#/definitions/messagessend_message_recipient_metadata"
      attachments:
        type: "array"
        description: "an array of supported attachments to add to the message"
        items:
          $ref: "#/definitions/messagessend_message_attachments"
      images:
        type: "array"
        description: "an array of embedded images to add to the message"
        items:
          $ref: "#/definitions/messagessend_message_images"
    description: "the information on the message to send"
  body_31:
    type: "object"
    required:
    - "key"
    - "message"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      message:
        $ref: "#/definitions/messagessend_message"
      async:
        type: "boolean"
        description: "enable a background sending mode that is optimized for bulk\
          \ sending. In async mode, messages/send will immediately return a status\
          \ of \"queued\" for every recipient. To handle rejections when sending in\
          \ async mode, set up a webhook for the 'reject' event. Defaults to false\
          \ for messages with no more than 10 recipients; messages with more than\
          \ 10 recipients are always sent asynchronously, regardless of the value\
          \ of async."
      ip_pool:
        type: "string"
        description: "the name of the dedicated ip pool that should be used to send\
          \ the message. If you do not have any dedicated IPs, this parameter has\
          \ no effect. If you specify a pool that does not exist, your default pool\
          \ will be used instead."
      send_at:
        type: "string"
        format: "date-time"
        description: "when this message should be sent as a UTC timestamp in YYYY-MM-DD\
          \ HH:MM:SS format. If you specify a time in the past, the message will be\
          \ sent immediately."
  inline_response_200_28:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
        description: "the email address of the recipient"
      status:
        type: "string"
        description: "the sending status of the recipient"
        enum:
        - "sent"
        - "queued"
        - "scheduled"
        - "rejected"
        - "invalid"
      reject_reason:
        type: "string"
        description: "the reason for the rejection if the recipient status is \"rejected\""
        enum:
        - "hard-bounce"
        - "soft-bounce"
        - "spam"
        - "unsub"
        - "custom"
        - "invalid-sender"
        - "invalid"
        - "test-mode-limit"
        - "unsigned"
        - "rule"
      _id:
        type: "string"
        description: "the message's unique id"
    description: "the sending results for a single recipient"
    example:
      reject_reason: "hard-bounce"
      _id: "_id"
      email: "email"
      status: "sent"
  messagessendtemplate_template_content:
    type: "object"
    properties:
      name:
        type: "string"
        description: "the name of the mc:edit editable region to inject into"
      content:
        type: "string"
        description: "the content to inject"
    description: "the injection of a single piece of content into a single editable\
      \ region"
  messagessendtemplate_message:
    type: "object"
    properties:
      html:
        type: "string"
        description: "optional full HTML content to be sent if not in template"
      text:
        type: "string"
        description: "optional full text content to be sent"
      subject:
        type: "string"
        description: "the message subject"
      from_email:
        type: "string"
        format: "email"
        description: "the sender email address"
      from_name:
        type: "string"
        description: "optional from name to be used"
      to:
        type: "array"
        description: "an array of recipient information."
        items:
          $ref: "#/definitions/messagessend_message_to"
      headers:
        type: "object"
        description: "optional extra headers to add to the message (most headers are\
          \ allowed)"
        properties: {}
      important:
        type: "boolean"
        description: "whether or not this message is important, and should be delivered\
          \ ahead of non-important messages"
      track_opens:
        type: "boolean"
        description: "whether or not to turn on open tracking for the message"
      track_clicks:
        type: "boolean"
        description: "whether or not to turn on click tracking for the message"
      auto_text:
        type: "boolean"
        description: "whether or not to automatically generate a text part for messages\
          \ that are not given text"
      auto_html:
        type: "boolean"
        description: "whether or not to automatically generate an HTML part for messages\
          \ that are not given HTML"
      inline_css:
        type: "boolean"
        description: "whether or not to automatically inline all CSS styles provided\
          \ in the message HTML - only for HTML documents less than 256KB in size"
      url_strip_qs:
        type: "boolean"
        description: "whether or not to strip the query string from URLs when aggregating\
          \ tracked URL data"
      preserve_recipients:
        type: "boolean"
        description: "whether or not to expose all recipients in to \"To\" header\
          \ for each email"
      view_content_link:
        type: "boolean"
        description: "set to false to remove content logging for sensitive emails"
      bcc_address:
        type: "string"
        format: "email"
        description: "an optional address to receive an exact copy of each recipient's\
          \ email"
      tracking_domain:
        type: "string"
        description: "a custom domain to use for tracking opens and clicks instead\
          \ of mandrillapp.com"
      signing_domain:
        type: "string"
        description: "a custom domain to use for SPF/DKIM signing instead of mandrill\
          \ (for \"via\" or \"on behalf of\" in email clients)"
      return_path_domain:
        type: "string"
        description: "a custom domain to use for the messages's return-path"
      merge:
        type: "boolean"
        description: "whether to evaluate merge tags in the message. Will automatically\
          \ be set to true if either merge_vars or global_merge_vars are provided."
      merge_language:
        type: "string"
        description: "the merge tag language to use when evaluating merge tags, either\
          \ mailchimp or handlebars"
        enum:
        - "mailchimp"
        - "handlebars"
      global_merge_vars:
        type: "array"
        description: "global merge variables to use for all recipients. You can override\
          \ these per recipient."
        items:
          $ref: "#/definitions/messagessend_message_global_merge_vars"
      merge_vars:
        type: "array"
        description: "per-recipient merge variables, which override global merge variables\
          \ with the same name."
        items:
          $ref: "#/definitions/messagessend_message_merge_vars"
      tags:
        type: "array"
        description: "an array of string to tag the message with. Stats are accumulated\
          \ using tags, though we only store the first 100 we see, so this should\
          \ not be unique or change frequently. Tags should be 50 characters or less.\
          \ Any tags starting with an underscore are reserved for internal use and\
          \ will cause errors."
        items:
          type: "string"
          description: "a single tag - must not start with an underscore"
      subaccount:
        type: "string"
        description: "the unique id of a subaccount for this message - must already\
          \ exist or will fail with an error"
      google_analytics_domains:
        type: "array"
        description: "an array of strings indicating for which any matching URLs will\
          \ automatically have Google Analytics parameters appended to their query\
          \ string automatically."
        items:
          type: "string"
      google_analytics_campaign:
        type: "string"
        format: "email"
        description: "optional string indicating the value to set for the utm_campaign\
          \ tracking parameter. If this isn't provided the email's from address will\
          \ be used instead."
      metadata:
        $ref: "#/definitions/messagessend_message_metadata"
      recipient_metadata:
        type: "array"
        description: "Per-recipient metadata that will override the global values\
          \ specified in the metadata parameter."
        items:
          $ref: "#/definitions/messagessend_message_recipient_metadata"
      attachments:
        type: "array"
        description: "an array of supported attachments to add to the message"
        items:
          $ref: "#/definitions/messagessend_message_attachments"
      images:
        type: "array"
        description: "an array of embedded images to add to the message"
        items:
          $ref: "#/definitions/messagessend_message_images"
    description: "the other information on the message to send - same as /messages/send,\
      \ but without the html content"
  body_32:
    type: "object"
    required:
    - "key"
    - "message"
    - "template_content"
    - "template_name"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      template_name:
        type: "string"
        description: "the immutable name or slug of a template that exists in the\
          \ user's account. For backwards-compatibility, the template name may also\
          \ be used but the immutable slug is preferred."
      template_content:
        type: "array"
        description: "an array of template content to send. Each item in the array\
          \ should be a struct with two keys - name: the name of the content block\
          \ to set the content for, and content: the actual content to put into the\
          \ block"
        items:
          $ref: "#/definitions/messagessendtemplate_template_content"
      message:
        $ref: "#/definitions/messagessendtemplate_message"
      async:
        type: "boolean"
        description: "enable a background sending mode that is optimized for bulk\
          \ sending. In async mode, messages/send will immediately return a status\
          \ of \"queued\" for every recipient. To handle rejections when sending in\
          \ async mode, set up a webhook for the 'reject' event. Defaults to false\
          \ for messages with no more than 10 recipients; messages with more than\
          \ 10 recipients are always sent asynchronously, regardless of the value\
          \ of async."
      ip_pool:
        type: "string"
        description: "the name of the dedicated ip pool that should be used to send\
          \ the message. If you do not have any dedicated IPs, this parameter has\
          \ no effect. If you specify a pool that does not exist, your default pool\
          \ will be used instead."
      send_at:
        type: "string"
        format: "date-time"
        description: "when this message should be sent as a UTC timestamp in YYYY-MM-DD\
          \ HH:MM:SS format. If you specify a time in the past, the message will be\
          \ sent immediately."
  inline_response_200_29:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
        description: "the email address of the recipient"
      status:
        type: "string"
        description: "the sending status of the recipient"
        enum:
        - "sent"
        - "queued"
        - "rejected"
        - "invalid"
      reject_reason:
        type: "string"
        description: "the reason for the rejection if the recipient status is \"rejected\""
        enum:
        - "hard-bounce"
        - "soft-bounce"
        - "spam"
        - "unsub"
        - "custom"
        - "invalid-sender"
        - "invalid"
        - "test-mode-limit"
        - "unsigned"
        - "rule"
      _id:
        type: "string"
        description: "the message's unique id"
    description: "the sending results for a single recipient"
    example:
      reject_reason: "hard-bounce"
      _id: "_id"
      email: "email"
      status: "sent"
  body_33:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      query:
        type: "string"
        description: "search terms to find matching messages"
      date_from:
        type: "string"
        format: "date-time"
        description: "start date"
      date_to:
        type: "string"
        format: "date-time"
        description: "end date"
      tags:
        type: "array"
        description: "an array of tag names to narrow the search to, will return messages\
          \ that contain ANY of the tags"
        items:
          type: "string"
      senders:
        type: "array"
        description: "an array of sender addresses to narrow the search to, will return\
          \ messages sent by ANY of the senders"
        items:
          type: "string"
          format: "email"
          description: "a single sender email address"
      api_keys:
        type: "array"
        description: "an array of API keys to narrow the search to, will return messages\
          \ sent by ANY of the keys"
        items:
          type: "string"
          description: "a single API key"
      limit:
        type: "integer"
        description: "the maximum number of results to return, defaults to 100, 1000\
          \ is the maximum"
        minimum: 100
        maximum: 1000
  messagessearch_opens_detail:
    type: "object"
    properties:
      ts:
        type: "integer"
        description: "the unix timestamp from when the message was opened"
      ip:
        type: "string"
        description: "the IP address that generated the open"
      location:
        type: "string"
        description: "the approximate region and country that the opening IP is located"
      ua:
        type: "string"
        description: "the email client or browser data of the open"
    description: "information on an individual open"
    example:
      ip: "ip"
      location: "location"
      ua: "ua"
      ts: 1
  messagessearch_clicks_detail:
    type: "object"
    properties:
      ts:
        type: "integer"
        description: "the unix timestamp from when the message was clicked"
      url:
        type: "string"
        description: "the URL that was clicked on"
      ip:
        type: "string"
        description: "the IP address that generated the click"
      location:
        type: "string"
        description: "the approximate region and country that the clicking IP is located"
      ua:
        type: "string"
        description: "the email client or browser data of the click"
    description: "information on an individual click"
    example:
      ip: "ip"
      location: "location"
      ua: "ua"
      url: "url"
      ts: 5
  inline_response_200_30:
    type: "object"
    properties:
      ts:
        type: "integer"
        description: "the Unix timestamp from when this message was sent"
      _id:
        type: "string"
        description: "the message's unique id"
      sender:
        type: "string"
        format: "email"
        description: "the email address of the sender"
      template:
        type: "string"
        description: "the unique name of the template used, if any"
      subject:
        type: "string"
        description: "the message's subject line"
      email:
        type: "string"
        format: "email"
        description: "the recipient email address"
      tags:
        type: "array"
        description: "list of tags on this message"
        items:
          type: "string"
          description: "individual tag on this message"
      opens:
        type: "integer"
        description: "how many times has this message been opened"
      opens_detail:
        type: "array"
        description: "list of individual opens for the message"
        items:
          $ref: "#/definitions/messagessearch_opens_detail"
      clicks:
        type: "integer"
        description: "how many times has a link been clicked in this message"
      clicks_detail:
        type: "array"
        description: "list of individual clicks for the message"
        items:
          $ref: "#/definitions/messagessearch_clicks_detail"
      state:
        type: "string"
        description: "sending status of this message"
        enum:
        - "sent"
        - "bounced"
        - "rejected"
      metadata:
        type: "object"
        description: "any custom metadata provided when the message was sent"
        properties: {}
    description: "the information for a single matching message"
    example:
      template: "template"
      metadata: "{}"
      subject: "subject"
      clicks_detail:
      - ip: "ip"
        location: "location"
        ua: "ua"
        url: "url"
        ts: 5
      - ip: "ip"
        location: "location"
        ua: "ua"
        url: "url"
        ts: 5
      tags:
      - "tags"
      - "tags"
      opens_detail:
      - ip: "ip"
        location: "location"
        ua: "ua"
        ts: 1
      - ip: "ip"
        location: "location"
        ua: "ua"
        ts: 1
      sender: "sender"
      opens: 6
      clicks: 5
      _id: "_id"
      state: "sent"
      email: "email"
      ts: 0
  body_34:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      query:
        type: "string"
        description: "the search terms to find matching messages for"
      date_from:
        type: "string"
        format: "date-time"
        description: "start date"
      date_to:
        type: "string"
        format: "date-time"
        description: "end date"
      tags:
        type: "array"
        description: "an array of tag names to narrow the search to, will return messages\
          \ that contain ANY of the tags"
        items:
          type: "string"
          description: "a single tag name"
      senders:
        type: "array"
        description: "an array of sender addresses to narrow the search to, will return\
          \ messages sent by ANY of the senders"
        items:
          type: "string"
          description: "a single sender email address"
  inline_response_200_31:
    type: "object"
    properties:
      time:
        type: "string"
        format: "date-time"
        description: "the hour as a UTC date string in YYYY-MM-DD HH:MM:SS format"
      sent:
        type: "integer"
        description: "the number of emails that were sent during the hour"
      hard_bounces:
        type: "integer"
        description: "the number of emails that hard bounced during the hour"
      soft_bounces:
        type: "integer"
        description: "the number of emails that soft bounced during the hour"
      rejects:
        type: "integer"
        description: "the number of emails that were rejected during the hour"
      complaints:
        type: "integer"
        description: "the number of spam complaints received during the hour"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes received during the hour"
      opens:
        type: "integer"
        description: "the number of emails opened during the hour"
      unique_opens:
        type: "integer"
        description: "the number of unique opens generated by messages sent during\
          \ the hour"
      clicks:
        type: "integer"
        description: "the number of tracked URLs clicked during the hour"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks generated by messages sent during\
          \ the hour"
    description: "the stats for a single hour"
    example:
      rejects: 5
      hard_bounces: 6
      unique_clicks: 2
      unsubs: 2
      complaints: 5
      opens: 7
      clicks: 3
      soft_bounces: 1
      time: "2000-01-23T04:56:07.000+00:00"
      sent: 0
      unique_opens: 9
  body_35:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "the unique id of the message to get - passed as the \"_id\"\
          \ field in webhooks, send calls, or search calls"
  inline_response_200_32_smtp_events:
    type: "object"
    properties:
      ts:
        type: "integer"
        description: "the Unix timestamp when the event occured"
      type:
        type: "string"
        description: "the message's state as a result of this event"
      diag:
        type: "string"
        description: "the SMTP response from the recipient's server"
    description: "information about a specific smtp event"
    example:
      diag: "diag"
      type: "type"
      ts: 5
  inline_response_200_32:
    type: "object"
    properties:
      ts:
        type: "integer"
        description: "the Unix timestamp from when this message was sent"
      _id:
        type: "string"
        description: "the message's unique id"
      sender:
        type: "string"
        format: "email"
        description: "the email address of the sender"
      template:
        type: "string"
        description: "the unique name of the template used, if any"
      subject:
        type: "string"
        description: "the message's subject line"
      email:
        type: "string"
        format: "email"
        description: "the recipient email address"
      tags:
        type: "array"
        description: "list of tags on this message"
        items:
          type: "string"
          description: "individual tag on this message"
      opens:
        type: "integer"
        description: "how many times has this message been opened"
      opens_detail:
        type: "array"
        description: "list of individual opens for the message"
        items:
          $ref: "#/definitions/messagessearch_opens_detail"
      clicks:
        type: "integer"
        description: "how many times has a link been clicked in this message"
      clicks_detail:
        type: "array"
        description: "list of individual clicks for the message"
        items:
          $ref: "#/definitions/messagessearch_clicks_detail"
      state:
        type: "string"
        description: "sending status of this message"
        enum:
        - "sent"
        - "bounced"
        - "rejected"
      metadata:
        type: "object"
        description: "any custom metadata provided when the message was sent"
        properties: {}
      smtp_events:
        type: "array"
        description: "a log of up to 3 smtp events for the message"
        items:
          $ref: "#/definitions/inline_response_200_32_smtp_events"
    description: "the information for the message"
    example:
      template: "template"
      metadata: "{}"
      subject: "subject"
      clicks_detail:
      - ip: "ip"
        location: "location"
        ua: "ua"
        url: "url"
        ts: 5
      - ip: "ip"
        location: "location"
        ua: "ua"
        url: "url"
        ts: 5
      tags:
      - "tags"
      - "tags"
      opens_detail:
      - ip: "ip"
        location: "location"
        ua: "ua"
        ts: 1
      - ip: "ip"
        location: "location"
        ua: "ua"
        ts: 1
      sender: "sender"
      opens: 6
      clicks: 1
      _id: "_id"
      state: "sent"
      smtp_events:
      - diag: "diag"
        type: "type"
        ts: 5
      - diag: "diag"
        type: "type"
        ts: 5
      email: "email"
      ts: 0
  body_36:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "the unique id of the message to get - passed as the \"_id\"\
          \ field in webhooks, send calls, or search calls"
  inline_response_200_33_to:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
        description: "the email address of the recipient"
      name:
        type: "string"
        description: "the alias of the recipient (if any)"
    description: "the message recipient's information"
    example:
      name: "name"
      email: "email"
  inline_response_200_33_attachments:
    type: "object"
    properties:
      name:
        type: "string"
        description: "the file name of the attachment"
      type:
        type: "string"
        description: "the MIME type of the attachment"
      content:
        type: "string"
        description: "the content of the attachment as a base64 encoded string"
    description: "information about an individual attachment"
    example:
      name: "name"
      type: "type"
      content: "content"
  inline_response_200_33:
    type: "object"
    properties:
      ts:
        type: "integer"
        description: "the Unix timestamp from when this message was sent"
      _id:
        type: "string"
        description: "the message's unique id"
      from_email:
        type: "string"
        format: "email"
        description: "the email address of the sender"
      from_name:
        type: "string"
        description: "the alias of the sender (if any)"
      subject:
        type: "string"
        description: "the message's subject line"
      to:
        $ref: "#/definitions/inline_response_200_33_to"
      tags:
        type: "array"
        description: "list of tags on this message"
        items:
          type: "string"
          description: "individual tag on this message"
      headers:
        type: "object"
        description: "the key-value pairs of the custom MIME headers for the message's\
          \ main document"
        properties: {}
      text:
        type: "string"
        description: "the text part of the message, if any"
      html:
        type: "string"
        description: "the HTML part of the message, if any"
      attachments:
        type: "array"
        description: "an array of any attachments that can be found in the message"
        items:
          $ref: "#/definitions/inline_response_200_33_attachments"
    description: "the content of the message"
    example:
      headers: "{}"
      from_email: "from_email"
      attachments:
      - name: "name"
        type: "type"
        content: "content"
      - name: "name"
        type: "type"
        content: "content"
      subject: "subject"
      html: "html"
      _id: "_id"
      to:
        name: "name"
        email: "email"
      text: "text"
      from_name: "from_name"
      ts: 0
      tags:
      - "tags"
      - "tags"
  body_37:
    type: "object"
    required:
    - "key"
    - "raw_message"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      raw_message:
        type: "string"
        description: "the full MIME document of an email message"
  inline_response_200_34_to:
    type: "object"
    properties:
      email:
        type: "string"
        description: "the email address of the recipient"
      name:
        type: "string"
        description: "the alias of the recipient (if any)"
    description: "the information on a single recipient"
    example:
      name: "name"
      email: "email"
  inline_response_200_34_attachments:
    type: "object"
    properties:
      name:
        type: "string"
        description: "the file name of the attachment"
      type:
        type: "string"
        description: "the MIME type of the attachment"
      binary:
        type: "boolean"
        description: "if this is set to true, the attachment is not pure-text, and\
          \ the content will be base64 encoded"
      content:
        type: "string"
        description: "the content of the attachment as a base64 encoded string"
    description: "information about an individual attachment"
    example:
      binary: true
      name: "name"
      type: "type"
      content: "content"
  inline_response_200_34_images:
    type: "object"
    properties:
      name:
        type: "string"
        description: "the Content-ID of the embedded image"
      type:
        type: "string"
        description: "the MIME type of the image"
      content:
        type: "string"
        description: "the content of the image as a base64 encoded string"
    description: "information about an individual image"
    example:
      name: "name"
      type: "type"
      content: "content"
  inline_response_200_34:
    type: "object"
    properties:
      subject:
        type: "string"
        description: "the subject of the message"
      from_email:
        type: "string"
        format: "email"
        description: "the email address of the sender"
      from_name:
        type: "string"
        description: "the alias of the sender (if any)"
      to:
        type: "array"
        description: "an array of any recipients in the message"
        items:
          $ref: "#/definitions/inline_response_200_34_to"
      headers:
        type: "object"
        description: "the key-value pairs of the MIME headers for the message's main\
          \ document"
        properties: {}
      text:
        type: "string"
        description: "the text part of the message, if any"
      html:
        type: "string"
        description: "the HTML part of the message, if any"
      attachments:
        type: "array"
        description: "an array of any attachments that can be found in the message"
        items:
          $ref: "#/definitions/inline_response_200_34_attachments"
      images:
        type: "array"
        description: "an array of any embedded images that can be found in the message"
        items:
          $ref: "#/definitions/inline_response_200_34_images"
    description: "the parsed message"
    example:
      headers: "{}"
      images:
      - name: "name"
        type: "type"
        content: "content"
      - name: "name"
        type: "type"
        content: "content"
      from_email: "from_email"
      attachments:
      - binary: true
        name: "name"
        type: "type"
        content: "content"
      - binary: true
        name: "name"
        type: "type"
        content: "content"
      subject: "subject"
      html: "html"
      to:
      - name: "name"
        email: "email"
      - name: "name"
        email: "email"
      text: "text"
      from_name: "from_name"
  body_38:
    type: "object"
    required:
    - "key"
    - "raw_message"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      raw_message:
        type: "string"
        description: "the full MIME document of an email message"
      from_email:
        type: "string"
        format: "email"
        description: "optionally define the sender address - otherwise we'll use the\
          \ address found in the provided headers"
      from_name:
        type: "string"
        description: "optionally define the sender alias"
      to:
        type: "array"
        description: "optionally define the recipient to receive the message - otherwise\
          \ we'll use the To, Cc, and Bcc headers provided in the document"
        items:
          type: "string"
          description: "the email address of the recipient"
      async:
        type: "boolean"
        description: "enable a background sending mode that is optimized for bulk\
          \ sending. In async mode, messages/sendRaw will immediately return a status\
          \ of \"queued\" for every recipient. To handle rejections when sending in\
          \ async mode, set up a webhook for the 'reject' event. Defaults to false\
          \ for messages with no more than 10 recipients; messages with more than\
          \ 10 recipients are always sent asynchronously, regardless of the value\
          \ of async."
      ip_pool:
        type: "string"
        description: "the name of the dedicated ip pool that should be used to send\
          \ the message. If you do not have any dedicated IPs, this parameter has\
          \ no effect. If you specify a pool that does not exist, your default pool\
          \ will be used instead."
      send_at:
        type: "string"
        format: "date-time"
        description: "when this message should be sent as a UTC timestamp in YYYY-MM-DD\
          \ HH:MM:SS format. If you specify a time in the past, the message will be\
          \ sent immediately."
      return_path_domain:
        type: "string"
        description: "a custom domain to use for the messages's return-path"
  body_39:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      to:
        type: "string"
        format: "email"
        description: "an optional recipient address to restrict results to"
  inline_response_200_35:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "the scheduled message id"
      created_at:
        type: "string"
        format: "date-time"
        description: "the UTC timestamp when the message was created, in YYYY-MM-DD\
          \ HH:MM:SS format"
      send_at:
        type: "string"
        format: "date-time"
        description: "the UTC timestamp when the message will be sent, in YYYY-MM-DD\
          \ HH:MM:SS format"
      from_email:
        type: "string"
        format: "email"
        description: "the email's sender address"
      to:
        type: "string"
        format: "email"
        description: "the email's recipient"
      subject:
        type: "string"
        description: "the email's subject"
    description: "a scheduled email"
    example:
      from_email: "from_email"
      subject: "subject"
      created_at: "2000-01-23T04:56:07.000+00:00"
      send_at: "2000-01-23T04:56:07.000+00:00"
      _id: "_id"
      to: "to"
  body_40:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "a scheduled email id, as returned by any of the messages/send\
          \ calls or messages/list-scheduled"
  body_41:
    type: "object"
    required:
    - "id"
    - "key"
    - "send_at"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "a scheduled email id, as returned by any of the messages/send\
          \ calls or messages/list-scheduled"
      send_at:
        type: "string"
        format: "date-time"
        description: "the new UTC timestamp when the message should sent. Mandrill\
          \ can't time travel, so if you specify a time in past the message will be\
          \ sent immediately"
  body_42:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  inline_response_200_36:
    type: "object"
    properties:
      name:
        type: "string"
        description: "the unique identifier of the metadata field to update"
      state:
        type: "string"
        description: "the current state of the metadata field"
        enum:
        - "active"
        - "delete"
        - "index"
      view_template:
        type: "string"
        description: "Mustache template to control how the metadata is rendered in\
          \ your activity log"
    description: "the individual custom metadata field info"
    example:
      name: "name"
      state: "active"
      view_template: "view_template"
  body_43:
    type: "object"
    required:
    - "key"
    - "name"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      name:
        type: "string"
        description: "a unique identifier for the metadata field"
        maxLength: 64
      view_template:
        type: "string"
        description: "Mustache template to control how the metadata is rendered in\
          \ your activity log"
        maxLength: 1024
  inline_response_200_37:
    type: "object"
    properties:
      name:
        type: "string"
        description: "the unique identifier of the metadata field to update"
      state:
        type: "string"
        description: "the current state of the metadata field"
        enum:
        - "active"
        - "delete"
        - "index"
      view_template:
        type: "string"
        description: "Mustache template to control how the metadata is rendered in\
          \ your activity log"
    description: "the information saved about the new metadata field"
    example:
      name: "name"
      state: "active"
      view_template: "view_template"
  body_44:
    type: "object"
    required:
    - "key"
    - "name"
    - "view_template"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      name:
        type: "string"
        description: "the unique identifier of the metadata field to update"
      view_template:
        type: "string"
        description: "Mustache template to control how the metadata is rendered in\
          \ your activity log"
        maxLength: 1024
  inline_response_200_38:
    type: "object"
    properties:
      name:
        type: "string"
        description: "the unique identifier of the metadata field to update"
      state:
        type: "string"
        description: "the current state of the metadata field"
        enum:
        - "active"
        - "delete"
        - "index"
      view_template:
        type: "string"
        description: "Mustache template to control how the metadata is rendered in\
          \ your activity log"
    description: "the information for the updated metadata field"
    example:
      name: "name"
      state: "active"
      view_template: "view_template"
  body_45:
    type: "object"
    required:
    - "key"
    - "name"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      name:
        type: "string"
        description: "the unique identifier of the metadata field to update"
  inline_response_200_39:
    type: "object"
    properties:
      name:
        type: "string"
        description: "the unique identifier of the metadata field to update"
      state:
        type: "string"
        description: "the current state of the metadata field"
        enum:
        - "active"
        - "delete"
        - "index"
      view_template:
        type: "string"
        description: "Mustache template to control how the metadata is rendered in\
          \ your activity log"
    description: "the information for the deleted metadata field"
    example:
      name: "name"
      state: "active"
      view_template: "view_template"
  body_46:
    type: "object"
    required:
    - "email"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      email:
        type: "string"
        format: "email"
        description: "an email address to block"
      comment:
        type: "string"
        description: "an optional comment describing the rejection"
      subaccount:
        type: "string"
        description: "an optional unique identifier for the subaccount to limit the\
          \ denylist entry"
        maxLength: 255
  inline_response_200_40:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
        description: "the email address you provided"
      added:
        type: "boolean"
        description: "whether the operation succeeded"
    description: "a status object containing the address and the result of the operation"
    example:
      added: true
      email: "email"
  body_47:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      email:
        type: "string"
        format: "email"
        description: "an optional email address to search by"
      include_expired:
        type: "boolean"
        description: "whether to include rejections that have already expired."
      subaccount:
        type: "string"
        description: "an optional unique identifier for the subaccount to limit the\
          \ denylist"
        maxLength: 255
  rejectslist_sender:
    type: "object"
    properties:
      address:
        type: "string"
        format: "email"
        description: "the sender's email address"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the sender was first seen by Mandrill\
          \ as a UTC date string in YYYY-MM-DD HH:MM:SS format"
      sent:
        type: "integer"
        description: "the total number of messages sent by this sender"
      hard_bounces:
        type: "integer"
        description: "the total number of hard bounces by messages by this sender"
      soft_bounces:
        type: "integer"
        description: "the total number of soft bounces by messages by this sender"
      rejects:
        type: "integer"
        description: "the total number of rejected messages by this sender"
      complaints:
        type: "integer"
        description: "the total number of spam complaints received for messages by\
          \ this sender"
      unsubs:
        type: "integer"
        description: "the total number of unsubscribe requests received for messages\
          \ by this sender"
      opens:
        type: "integer"
        description: "the total number of times messages by this sender have been\
          \ opened"
      clicks:
        type: "integer"
        description: "the total number of times tracked URLs in messages by this sender\
          \ have been clicked"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this sender"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this sender"
    description: "the sender that this denylist entry applies to, or null if none."
    example:
      rejects: 5
      address: "address"
      hard_bounces: 6
      unique_clicks: 2
      unsubs: 2
      complaints: 5
      created_at: "2000-01-23T04:56:07.000+00:00"
      opens: 7
      clicks: 9
      soft_bounces: 1
      sent: 0
      unique_opens: 3
  inline_response_200_41:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
        description: "the email that is blocked"
      reason:
        type: "string"
        description: "the type of event (hard-bounce, soft-bounce, spam, unsub, custom)\
          \ that caused this rejection"
      detail:
        type: "string"
        description: "extended details about the event, such as the SMTP diagnostic\
          \ for bounces or the comment for manually-created rejections"
      created_at:
        type: "string"
        format: "date-time"
        description: "when the email was added to the denylist"
      last_event_at:
        type: "string"
        format: "date-time"
        description: "the timestamp of the most recent event that either created or\
          \ renewed this rejection"
      expires_at:
        type: "string"
        format: "date-time"
        description: "when the denylist entry will expire (this may be in the past)"
      expired:
        type: "boolean"
        description: "whether the denylist entry has expired"
      sender:
        $ref: "#/definitions/rejectslist_sender"
      subaccount:
        type: "string"
        description: "the subaccount that this denylist entry applies to, or null\
          \ if none."
    description: "the information for each rejection  entry"
    example:
      reason: "reason"
      last_event_at: "2000-01-23T04:56:07.000+00:00"
      expires_at: "2000-01-23T04:56:07.000+00:00"
      expired: true
      sender:
        rejects: 5
        address: "address"
        hard_bounces: 6
        unique_clicks: 2
        unsubs: 2
        complaints: 5
        created_at: "2000-01-23T04:56:07.000+00:00"
        opens: 7
        clicks: 9
        soft_bounces: 1
        sent: 0
        unique_opens: 3
      subaccount: "subaccount"
      created_at: "2000-01-23T04:56:07.000+00:00"
      detail: "detail"
      email: "email"
  body_48:
    type: "object"
    required:
    - "email"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      email:
        type: "string"
        format: "email"
        description: "an email address"
      subaccount:
        type: "string"
        description: "an optional unique identifier for the subaccount to limit the\
          \ denylist deletion"
        maxLength: 255
  inline_response_200_42:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
        description: "the email address that was removed from the denylist"
      deleted:
        type: "boolean"
        description: "whether the address was deleted successfully."
      subaccount:
        type: "string"
        description: "the subaccount denylist that the address was removed from, if\
          \ any"
    description: "a status object containing the address and whether the deletion\
      \ succeeded."
    example:
      deleted: true
      subaccount: "subaccount"
      email: "email"
  body_49:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  inline_response_200_43:
    type: "object"
    properties:
      address:
        type: "string"
        format: "email"
        description: "the sender's email address"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the sender was first seen by Mandrill\
          \ as a UTC date string in YYYY-MM-DD HH:MM:SS format"
      sent:
        type: "integer"
        description: "the total number of messages sent by this sender"
      hard_bounces:
        type: "integer"
        description: "the total number of hard bounces by messages by this sender"
      soft_bounces:
        type: "integer"
        description: "the total number of soft bounces by messages by this sender"
      rejects:
        type: "integer"
        description: "the total number of rejected messages by this sender"
      complaints:
        type: "integer"
        description: "the total number of spam complaints received for messages by\
          \ this sender"
      unsubs:
        type: "integer"
        description: "the total number of unsubscribe requests received for messages\
          \ by this sender"
      opens:
        type: "integer"
        description: "the total number of times messages by this sender have been\
          \ opened"
      clicks:
        type: "integer"
        description: "the total number of times tracked URLs in messages by this sender\
          \ have been clicked"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this sender"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this sender"
    description: "the information on each sending address in the account"
    example:
      rejects: 5
      address: "address"
      hard_bounces: 6
      unique_clicks: 2
      unsubs: 2
      complaints: 5
      created_at: "2000-01-23T04:56:07.000+00:00"
      opens: 7
      clicks: 9
      soft_bounces: 1
      sent: 0
      unique_opens: 3
  body_50:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  sendersdomains_spf:
    type: "object"
    properties:
      valid:
        type: "boolean"
        description: "whether the domain's SPF record is valid for use with Mandrill"
      valid_after:
        type: "string"
        format: "date-time"
        description: "when the domain's SPF record will be considered valid for use\
          \ with Mandrill as a UTC string in YYYY-MM-DD HH:MM:SS format. If set, this\
          \ indicates that the record is valid now, but was previously invalid, and\
          \ Mandrill will wait until the record's TTL elapses to start using it."
      error:
        type: "string"
        description: "an error describing the spf record, or null if the record is\
          \ correct"
    description: "details about the domain's SPF record"
    example:
      valid: true
      valid_after: "2000-01-23T04:56:07.000+00:00"
      error: "error"
  sendersdomains_dkim:
    type: "object"
    properties:
      valid:
        type: "boolean"
        description: "whether the domain's DKIM record is valid for use with Mandrill"
      valid_after:
        type: "string"
        format: "date-time"
        description: "when the domain's DKIM record will be considered valid for use\
          \ with Mandrill as a UTC string in YYYY-MM-DD HH:MM:SS format. If set, this\
          \ indicates that the record is valid now, but was previously invalid, and\
          \ Mandrill will wait until the record's TTL elapses to start using it."
      error:
        type: "string"
        description: "an error describing the DKIM record, or null if the record is\
          \ correct"
    description: "details about the domain's DKIM record"
    example:
      valid: true
      valid_after: "2000-01-23T04:56:07.000+00:00"
      error: "error"
  inline_response_200_44:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "the sender domain name"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the sending domain was first seen as\
          \ a UTC string in YYYY-MM-DD HH:MM:SS format"
      last_tested_at:
        type: "string"
        format: "date-time"
        description: "when the domain's DNS settings were last tested as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      spf:
        $ref: "#/definitions/sendersdomains_spf"
      dkim:
        $ref: "#/definitions/sendersdomains_dkim"
      verified_at:
        type: "string"
        format: "date-time"
        description: "if the domain has been verified, this indicates when that verification\
          \ occurred as a UTC string in YYYY-MM-DD HH:MM:SS format"
      valid_signing:
        type: "boolean"
        description: "whether this domain can be used to authenticate mail, either\
          \ for itself or as a custom signing domain. If this is false but spf and\
          \ dkim are both valid, you will need to verify the domain before using it\
          \ to authenticate mail"
      verify_txt_key:
        type: "string"
        description: "a unique key used to verify a domain by adding a TXT record.\
          \ Append this key to 'mandrill_verify.' and add it to your domain's TXT\
          \ records to verify"
    description: "the information on each sending domain for the account"
    example:
      valid_signing: true
      verify_txt_key: "verify_txt_key"
      last_tested_at: "2000-01-23T04:56:07.000+00:00"
      dkim:
        valid: true
        valid_after: "2000-01-23T04:56:07.000+00:00"
        error: "error"
      verified_at: "2000-01-23T04:56:07.000+00:00"
      domain: "domain"
      spf:
        valid: true
        valid_after: "2000-01-23T04:56:07.000+00:00"
        error: "error"
      created_at: "2000-01-23T04:56:07.000+00:00"
  body_51:
    type: "object"
    required:
    - "domain"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      domain:
        type: "string"
        description: "a domain name"
  inline_response_200_45:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "the sender domain name"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the sending domain was first seen as\
          \ a UTC string in YYYY-MM-DD HH:MM:SS format"
      last_tested_at:
        type: "string"
        format: "date-time"
        description: "when the domain's DNS settings were last tested as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      spf:
        $ref: "#/definitions/sendersdomains_spf"
      dkim:
        $ref: "#/definitions/sendersdomains_dkim"
      verified_at:
        type: "string"
        format: "date-time"
        description: "if the domain has been verified, this indicates when that verification\
          \ occurred as a UTC string in YYYY-MM-DD HH:MM:SS format"
      valid_signing:
        type: "boolean"
        description: "whether this domain can be used to authenticate mail, either\
          \ for itself or as a custom signing domain. If this is false but spf and\
          \ dkim are both valid, you will need to verify the domain before using it\
          \ to authenticate mail"
      verify_txt_key:
        type: "string"
        description: "a unique key used to verify a domain by adding a TXT record.\
          \ Append this key to 'mandrill_verify.' and add it to your domain's TXT\
          \ records to verify"
    description: "information about the domain"
    example:
      valid_signing: true
      verify_txt_key: "verify_txt_key"
      last_tested_at: "2000-01-23T04:56:07.000+00:00"
      dkim:
        valid: true
        valid_after: "2000-01-23T04:56:07.000+00:00"
        error: "error"
      verified_at: "2000-01-23T04:56:07.000+00:00"
      domain: "domain"
      spf:
        valid: true
        valid_after: "2000-01-23T04:56:07.000+00:00"
        error: "error"
      created_at: "2000-01-23T04:56:07.000+00:00"
  body_52:
    type: "object"
    required:
    - "domain"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      domain:
        type: "string"
        description: "a domain name"
  inline_response_200_46:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "the sender domain name"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the sending domain was first seen as\
          \ a UTC string in YYYY-MM-DD HH:MM:SS format"
      last_tested_at:
        type: "string"
        format: "date-time"
        description: "when the domain's DNS settings were last tested as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      spf:
        $ref: "#/definitions/sendersdomains_spf"
      dkim:
        $ref: "#/definitions/sendersdomains_dkim"
      verified_at:
        type: "string"
        format: "date-time"
        description: "if the domain has been verified, this indicates when that verification\
          \ occurred as a UTC string in YYYY-MM-DD HH:MM:SS format"
      valid_signing:
        type: "boolean"
        description: "whether this domain can be used to authenticate mail, either\
          \ for itself or as a custom signing domain. If this is false but spf and\
          \ dkim are both valid, you will need to verify the domain before using it\
          \ to authenticate mail"
      verify_txt_key:
        type: "string"
        description: "a unique key used to verify a domain by adding a TXT record.\
          \ Append this key to 'mandrill_verify.' and add it to your domain's TXT\
          \ records to verify"
    description: "information about the sender domain"
    example:
      valid_signing: true
      verify_txt_key: "verify_txt_key"
      last_tested_at: "2000-01-23T04:56:07.000+00:00"
      dkim:
        valid: true
        valid_after: "2000-01-23T04:56:07.000+00:00"
        error: "error"
      verified_at: "2000-01-23T04:56:07.000+00:00"
      domain: "domain"
      spf:
        valid: true
        valid_after: "2000-01-23T04:56:07.000+00:00"
        error: "error"
      created_at: "2000-01-23T04:56:07.000+00:00"
  body_53:
    type: "object"
    required:
    - "domain"
    - "key"
    - "mailbox"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      domain:
        type: "string"
        description: "domain name at which you can receive email"
      mailbox:
        type: "string"
        description: "a mailbox at the domain where the verification email should\
          \ be sent"
  inline_response_200_47:
    type: "object"
    properties:
      status:
        type: "string"
        description: "\"sent\" indicates that the verification has been sent, \"already_verified\"\
          \ indicates that the domain has already been verified with your account"
      domain:
        type: "string"
        description: "the domain name you provided"
      email:
        type: "string"
        format: "email"
        description: "the email address the verification email was sent to"
    description: "information about the verification that was sent"
    example:
      domain: "domain"
      email: "email"
      status: "status"
  body_54:
    type: "object"
    required:
    - "address"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      address:
        type: "string"
        format: "email"
        description: "the email address of the sender"
  inline_response_200_48_stats_today:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent for this sender so far today"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced for this sender so far today"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced for this sender so far today"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender so far\
          \ today"
      complaints:
        type: "integer"
        description: "the number of spam complaints for this sender so far today"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes for this sender so far today"
      opens:
        type: "integer"
        description: "the number of times emails have been opened for this sender\
          \ so far today"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this sender so\
          \ far today"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked for this sender so\
          \ far today"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this sender\
          \ so far today"
    description: "stats for this sender so far today"
    example:
      rejects: 7
      hard_bounces: 2
      unique_clicks: 1
      unsubs: 1
      complaints: 1
      opens: 1
      clicks: 7
      soft_bounces: 4
      sent: 3
      unique_opens: 6
  inline_response_200_48_stats_last_7_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent for this sender in the last 7 days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced for this sender in the last\
          \ 7 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced for this sender in the last\
          \ 7 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender in the\
          \ last 7 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints for this sender in the last 7\
          \ days"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes for this sender in the last 7 days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened for this sender\
          \ in the last 7 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this sender in\
          \ the last 7 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked for this sender in\
          \ the last 7 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this sender\
          \ in the last 7 days"
    description: "stats for this sender in the last 7 days"
    example:
      rejects: 9
      hard_bounces: 5
      unique_clicks: 6
      unsubs: 8
      complaints: 6
      opens: 9
      clicks: 3
      soft_bounces: 9
      sent: 4
      unique_opens: 6
  inline_response_200_48_stats_last_30_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent for this sender in the last 30 days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced for this sender in the last\
          \ 30 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced for this sender in the last\
          \ 30 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender in the\
          \ last 30 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints for this sender in the last 30\
          \ days"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes for this sender in the last 30 days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened for this sender\
          \ in the last 30 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this sender in\
          \ the last 30 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked for this sender in\
          \ the last 30 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this sender\
          \ in the last 30 days"
    description: "stats for this sender in the last 30 days"
    example:
      rejects: 6
      hard_bounces: 2
      unique_clicks: 0
      unsubs: 6
      complaints: 5
      opens: 3
      clicks: 7
      soft_bounces: 6
      sent: 1
      unique_opens: 3
  inline_response_200_48_stats_last_60_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent for this sender in the last 60 days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced for this sender in the last\
          \ 60 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced for this sender in the last\
          \ 60 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender in the\
          \ last 60 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints for this sender in the last 60\
          \ days"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes for this sender in the last 60 days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened for this sender\
          \ in the last 60 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this sender in\
          \ the last 60 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked for this sender in\
          \ the last 60 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this sender\
          \ in the last 60 days"
    description: "stats for this sender in the last 60 days"
    example:
      rejects: 4
      hard_bounces: 6
      unique_clicks: 5
      unsubs: 7
      complaints: 8
      opens: 3
      clicks: 7
      soft_bounces: 0
      sent: 7
      unique_opens: 3
  inline_response_200_48_stats_last_90_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent for this sender in the last 90 days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced for this sender in the last\
          \ 90 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced for this sender in the last\
          \ 90 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender in the\
          \ last 90 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints for this sender in the last 90\
          \ days"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes for this sender in the last 90 days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened for this sender\
          \ in the last 90 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this sender in\
          \ the last 90 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked for this sender in\
          \ the last 90 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this sender\
          \ in the last 90 days"
    description: "stats for this sender in the last 90 days"
    example:
      rejects: 6
      hard_bounces: 4
      unique_clicks: 0
      unsubs: 1
      complaints: 4
      opens: 4
      clicks: 9
      soft_bounces: 0
      sent: 3
      unique_opens: 7
  inline_response_200_48_stats:
    type: "object"
    properties:
      today:
        $ref: "#/definitions/inline_response_200_48_stats_today"
      last_7_days:
        $ref: "#/definitions/inline_response_200_48_stats_last_7_days"
      last_30_days:
        $ref: "#/definitions/inline_response_200_48_stats_last_30_days"
      last_60_days:
        $ref: "#/definitions/inline_response_200_48_stats_last_60_days"
      last_90_days:
        $ref: "#/definitions/inline_response_200_48_stats_last_90_days"
    description: "an aggregate summary of the sender's sending stats"
    example:
      last_7_days:
        rejects: 9
        hard_bounces: 5
        unique_clicks: 6
        unsubs: 8
        complaints: 6
        opens: 9
        clicks: 3
        soft_bounces: 9
        sent: 4
        unique_opens: 6
      today:
        rejects: 7
        hard_bounces: 2
        unique_clicks: 1
        unsubs: 1
        complaints: 1
        opens: 1
        clicks: 7
        soft_bounces: 4
        sent: 3
        unique_opens: 6
      last_90_days:
        rejects: 6
        hard_bounces: 4
        unique_clicks: 0
        unsubs: 1
        complaints: 4
        opens: 4
        clicks: 9
        soft_bounces: 0
        sent: 3
        unique_opens: 7
      last_30_days:
        rejects: 6
        hard_bounces: 2
        unique_clicks: 0
        unsubs: 6
        complaints: 5
        opens: 3
        clicks: 7
        soft_bounces: 6
        sent: 1
        unique_opens: 3
      last_60_days:
        rejects: 4
        hard_bounces: 6
        unique_clicks: 5
        unsubs: 7
        complaints: 8
        opens: 3
        clicks: 7
        soft_bounces: 0
        sent: 7
        unique_opens: 3
  inline_response_200_48:
    type: "object"
    properties:
      address:
        type: "string"
        format: "email"
        description: "the sender's email address"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the sender was first seen by Mandrill\
          \ as a UTC date string in YYYY-MM-DD HH:MM:SS format"
      sent:
        type: "integer"
        description: "the total number of messages sent by this sender"
      hard_bounces:
        type: "integer"
        description: "the total number of hard bounces by messages by this sender"
      soft_bounces:
        type: "integer"
        description: "the total number of soft bounces by messages by this sender"
      rejects:
        type: "integer"
        description: "the total number of rejected messages by this sender"
      complaints:
        type: "integer"
        description: "the total number of spam complaints received for messages by\
          \ this sender"
      unsubs:
        type: "integer"
        description: "the total number of unsubscribe requests received for messages\
          \ by this sender"
      opens:
        type: "integer"
        description: "the total number of times messages by this sender have been\
          \ opened"
      clicks:
        type: "integer"
        description: "the total number of times tracked URLs in messages by this sender\
          \ have been clicked"
      stats:
        $ref: "#/definitions/inline_response_200_48_stats"
    description: "the detailed information on the sender"
    example:
      rejects: 5
      address: "address"
      hard_bounces: 6
      stats:
        last_7_days:
          rejects: 9
          hard_bounces: 5
          unique_clicks: 6
          unsubs: 8
          complaints: 6
          opens: 9
          clicks: 3
          soft_bounces: 9
          sent: 4
          unique_opens: 6
        today:
          rejects: 7
          hard_bounces: 2
          unique_clicks: 1
          unsubs: 1
          complaints: 1
          opens: 1
          clicks: 7
          soft_bounces: 4
          sent: 3
          unique_opens: 6
        last_90_days:
          rejects: 6
          hard_bounces: 4
          unique_clicks: 0
          unsubs: 1
          complaints: 4
          opens: 4
          clicks: 9
          soft_bounces: 0
          sent: 3
          unique_opens: 7
        last_30_days:
          rejects: 6
          hard_bounces: 2
          unique_clicks: 0
          unsubs: 6
          complaints: 5
          opens: 3
          clicks: 7
          soft_bounces: 6
          sent: 1
          unique_opens: 3
        last_60_days:
          rejects: 4
          hard_bounces: 6
          unique_clicks: 5
          unsubs: 7
          complaints: 8
          opens: 3
          clicks: 7
          soft_bounces: 0
          sent: 7
          unique_opens: 3
      unsubs: 2
      complaints: 5
      created_at: "2000-01-23T04:56:07.000+00:00"
      opens: 7
      clicks: 9
      soft_bounces: 1
      sent: 0
  body_55:
    type: "object"
    required:
    - "address"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      address:
        type: "string"
        format: "email"
        description: "the email address of the sender"
  inline_response_200_49:
    type: "object"
    properties:
      time:
        type: "string"
        format: "date-time"
        description: "the hour as a UTC date string in YYYY-MM-DD HH:MM:SS format"
      sent:
        type: "integer"
        description: "the number of emails that were sent during the hour"
      hard_bounces:
        type: "integer"
        description: "the number of emails that hard bounced during the hour"
      soft_bounces:
        type: "integer"
        description: "the number of emails that soft bounced during the hour"
      rejects:
        type: "integer"
        description: "the number of emails that were rejected during the hour"
      complaints:
        type: "integer"
        description: "the number of spam complaints received during the hour"
      opens:
        type: "integer"
        description: "the number of emails opened during the hour"
      unique_opens:
        type: "integer"
        description: "the number of unique opens generated by messages sent during\
          \ the hour"
      clicks:
        type: "integer"
        description: "the number of tracked URLs clicked during the hour"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks generated by messages sent during\
          \ the hour"
    description: "the stats for a single hour"
    example:
      rejects: 5
      hard_bounces: 6
      unique_clicks: 3
      complaints: 5
      opens: 2
      clicks: 9
      soft_bounces: 1
      time: "2000-01-23T04:56:07.000+00:00"
      sent: 0
      unique_opens: 7
  body_56:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      q:
        type: "string"
        description: "an optional prefix to filter the subaccounts' ids and names"
  inline_response_200_50:
    type: "object"
    properties:
      id:
        type: "string"
        description: "a unique indentifier for the subaccount"
      name:
        type: "string"
        description: "an optional display name for the subaccount"
      custom_quota:
        type: "integer"
        description: "an optional manual hourly quota for the subaccount. If not specified,\
          \ the hourly quota will be managed based on reputation"
      status:
        type: "string"
        description: "the current sending status of the subaccount"
        enum:
        - "active"
        - "paused"
      reputation:
        type: "integer"
        description: "the subaccount's current reputation on a scale from 0 to 100"
        minimum: 0
        maximum: 100
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      first_sent_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount first sent as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      sent_weekly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this week\
          \ (weeks start on midnight Monday, UTC)"
      sent_monthly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this month\
          \ (months start on midnight of the 1st, UTC)"
      sent_total:
        type: "integer"
        description: "the number of emails the subaccount has sent since it was created"
    description: "the individual subaccount info"
    example:
      custom_quota: 0
      name: "name"
      first_sent_at: "2000-01-23T04:56:07.000+00:00"
      reputation: 60
      created_at: "2000-01-23T04:56:07.000+00:00"
      sent_total: 5
      id: "id"
      sent_monthly: 5
      sent_weekly: 1
      status: "active"
  body_57:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "a unique identifier for the subaccount to be used in sending\
          \ calls"
        maxLength: 255
      name:
        type: "string"
        description: "an optional display name to further identify the subaccount"
        maxLength: 1024
      notes:
        type: "string"
        description: "optional extra text to associate with the subaccount"
      custom_quota:
        type: "integer"
        description: "an optional manual hourly quota for the subaccount. If not specified,\
          \ Mandrill will manage this based on reputation"
        minimum: 0
  inline_response_200_51:
    type: "object"
    properties:
      id:
        type: "string"
        description: "a unique indentifier for the subaccount"
      name:
        type: "string"
        description: "an optional display name for the subaccount"
      custom_quota:
        type: "integer"
        description: "an optional manual hourly quota for the subaccount. If not specified,\
          \ the hourly quota will be managed based on reputation"
      status:
        type: "string"
        description: "the current sending status of the subaccount"
        enum:
        - "active"
        - "paused"
      reputation:
        type: "integer"
        description: "the subaccount's current reputation on a scale from 0 to 100"
        minimum: 0
        maximum: 100
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      first_sent_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount first sent as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      sent_weekly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this week\
          \ (weeks start on midnight Monday, UTC)"
      sent_monthly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this month\
          \ (months start on midnight of the 1st, UTC)"
      sent_total:
        type: "integer"
        description: "the number of emails the subaccount has sent since it was created"
    description: "the information saved about the new subaccount"
    example:
      custom_quota: 0
      name: "name"
      first_sent_at: "2000-01-23T04:56:07.000+00:00"
      reputation: 60
      created_at: "2000-01-23T04:56:07.000+00:00"
      sent_total: 5
      id: "id"
      sent_monthly: 5
      sent_weekly: 1
      status: "active"
  body_58:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "the unique identifier of the subaccount to query"
  inline_response_200_52_last_30_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent for this subaccount in the last 30\
          \ days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced for this subaccount in the\
          \ last 30 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced for this subaccount in the\
          \ last 30 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this subaccount in\
          \ the last 30 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints for this subaccount in the last\
          \ 30 days"
      unsubs:
        type: "integer"
        description: "the number of unsbuscribes for this subaccount in the last 30\
          \ days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened for this subaccount\
          \ in the last 30 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this subaccount\
          \ in the last 30 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked for this subaccount\
          \ in the last 30 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this subaccount\
          \ in the last 30 days"
    description: "stats for this subaccount in the last 30 days"
    example:
      rejects: 4
      hard_bounces: 3
      unique_clicks: 7
      unsubs: 1
      complaints: 7
      opens: 1
      clicks: 6
      soft_bounces: 2
      sent: 9
      unique_opens: 1
  inline_response_200_52:
    type: "object"
    properties:
      id:
        type: "string"
        description: "a unique indentifier for the subaccount"
      name:
        type: "string"
        description: "an optional display name for the subaccount"
      notes:
        type: "string"
        description: "optional extra text to associate with the subaccount"
      custom_quota:
        type: "integer"
        description: "an optional manual hourly quota for the subaccount. If not specified,\
          \ the hourly quota will be managed based on reputation"
      status:
        type: "string"
        description: "the current sending status of the subaccount"
        enum:
        - "active"
        - "paused"
      reputation:
        type: "integer"
        description: "the subaccount's current reputation on a scale from 0 to 100"
        minimum: 0
        maximum: 100
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      first_sent_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount first sent as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      sent_weekly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this week\
          \ (weeks start on midnight Monday, UTC)"
      sent_monthly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this month\
          \ (months start on midnight of the 1st, UTC)"
      sent_total:
        type: "integer"
        description: "the number of emails the subaccount has sent since it was created"
      sent_hourly:
        type: "integer"
        description: "the number of emails the subaccount has sent in the last hour"
      hourly_quota:
        type: "integer"
        description: "the current hourly quota for the subaccount, either manual or\
          \ reputation-based"
      last_30_days:
        $ref: "#/definitions/inline_response_200_52_last_30_days"
    description: "the information about the subaccount"
    example:
      notes: "notes"
      custom_quota: 0
      first_sent_at: "2000-01-23T04:56:07.000+00:00"
      reputation: 60
      created_at: "2000-01-23T04:56:07.000+00:00"
      last_30_days:
        rejects: 4
        hard_bounces: 3
        unique_clicks: 7
        unsubs: 1
        complaints: 7
        opens: 1
        clicks: 6
        soft_bounces: 2
        sent: 9
        unique_opens: 1
      sent_weekly: 1
      hourly_quota: 7
      name: "name"
      sent_total: 5
      sent_hourly: 2
      id: "id"
      sent_monthly: 5
      status: "active"
  body_59:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "the unique identifier of the subaccount to update"
      name:
        type: "string"
        description: "an optional display name to further identify the subaccount"
        maxLength: 1024
      notes:
        type: "string"
        description: "optional extra text to associate with the subaccount"
      custom_quota:
        type: "integer"
        description: "an optional manual hourly quota for the subaccount. If not specified,\
          \ Mandrill will manage this based on reputation"
        minimum: 0
  inline_response_200_53:
    type: "object"
    properties:
      id:
        type: "string"
        description: "a unique indentifier for the subaccount"
      name:
        type: "string"
        description: "an optional display name for the subaccount"
      custom_quota:
        type: "integer"
        description: "an optional manual hourly quota for the subaccount. If not specified,\
          \ the hourly quota will be managed based on reputation"
      status:
        type: "string"
        description: "the current sending status of the subaccount"
        enum:
        - "active"
        - "paused"
      reputation:
        type: "integer"
        description: "the subaccount's current reputation on a scale from 0 to 100"
        minimum: 0
        maximum: 100
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      first_sent_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount first sent as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      sent_weekly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this week\
          \ (weeks start on midnight Monday, UTC)"
      sent_monthly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this month\
          \ (months start on midnight of the 1st, UTC)"
      sent_total:
        type: "integer"
        description: "the number of emails the subaccount has sent since it was created"
    description: "the information for the updated subaccount"
    example:
      custom_quota: 0
      name: "name"
      first_sent_at: "2000-01-23T04:56:07.000+00:00"
      reputation: 60
      created_at: "2000-01-23T04:56:07.000+00:00"
      sent_total: 5
      id: "id"
      sent_monthly: 5
      sent_weekly: 1
      status: "active"
  body_60:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "the unique identifier of the subaccount to delete"
  inline_response_200_54:
    type: "object"
    properties:
      id:
        type: "string"
        description: "a unique indentifier for the subaccount"
      name:
        type: "string"
        description: "an optional display name for the subaccount"
      custom_quota:
        type: "integer"
        description: "an optional manual hourly quota for the subaccount. If not specified,\
          \ the hourly quota will be managed based on reputation"
      status:
        type: "string"
        description: "the current sending status of the subaccount"
        enum:
        - "active"
        - "paused"
      reputation:
        type: "integer"
        description: "the subaccount's current reputation on a scale from 0 to 100"
        minimum: 0
        maximum: 100
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      first_sent_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount first sent as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      sent_weekly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this week\
          \ (weeks start on midnight Monday, UTC)"
      sent_monthly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this month\
          \ (months start on midnight of the 1st, UTC)"
      sent_total:
        type: "integer"
        description: "the number of emails the subaccount has sent since it was created"
    description: "the information for the deleted subaccount"
    example:
      custom_quota: 0
      name: "name"
      first_sent_at: "2000-01-23T04:56:07.000+00:00"
      reputation: 60
      created_at: "2000-01-23T04:56:07.000+00:00"
      sent_total: 5
      id: "id"
      sent_monthly: 5
      sent_weekly: 1
      status: "active"
  body_61:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "the unique identifier of the subaccount to pause"
  inline_response_200_55:
    type: "object"
    properties:
      id:
        type: "string"
        description: "a unique indentifier for the subaccount"
      name:
        type: "string"
        description: "an optional display name for the subaccount"
      custom_quota:
        type: "integer"
        description: "an optional manual hourly quota for the subaccount. If not specified,\
          \ the hourly quota will be managed based on reputation"
      status:
        type: "string"
        description: "the current sending status of the subaccount"
        enum:
        - "active"
        - "paused"
      reputation:
        type: "integer"
        description: "the subaccount's current reputation on a scale from 0 to 100"
        minimum: 0
        maximum: 100
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      first_sent_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount first sent as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      sent_weekly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this week\
          \ (weeks start on midnight Monday, UTC)"
      sent_monthly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this month\
          \ (months start on midnight of the 1st, UTC)"
      sent_total:
        type: "integer"
        description: "the number of emails the subaccount has sent since it was created"
    description: "the information for the paused subaccount"
    example:
      custom_quota: 0
      name: "name"
      first_sent_at: "2000-01-23T04:56:07.000+00:00"
      reputation: 60
      created_at: "2000-01-23T04:56:07.000+00:00"
      sent_total: 5
      id: "id"
      sent_monthly: 5
      sent_weekly: 1
      status: "active"
  body_62:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "string"
        description: "the unique identifier of the subaccount to resume"
  inline_response_200_56:
    type: "object"
    properties:
      id:
        type: "string"
        description: "a unique indentifier for the subaccount"
      name:
        type: "string"
        description: "an optional display name for the subaccount"
      custom_quota:
        type: "integer"
        description: "an optional manual hourly quota for the subaccount. If not specified,\
          \ the hourly quota will be managed based on reputation"
      status:
        type: "string"
        description: "the current sending status of the subaccount"
        enum:
        - "active"
        - "paused"
      reputation:
        type: "integer"
        description: "the subaccount's current reputation on a scale from 0 to 100"
        minimum: 0
        maximum: 100
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      first_sent_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the subaccount first sent as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      sent_weekly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this week\
          \ (weeks start on midnight Monday, UTC)"
      sent_monthly:
        type: "integer"
        description: "the number of emails the subaccount has sent so far this month\
          \ (months start on midnight of the 1st, UTC)"
      sent_total:
        type: "integer"
        description: "the number of emails the subaccount has sent since it was created"
    description: "the information for the resumed subaccount"
    example:
      custom_quota: 0
      name: "name"
      first_sent_at: "2000-01-23T04:56:07.000+00:00"
      reputation: 60
      created_at: "2000-01-23T04:56:07.000+00:00"
      sent_total: 5
      id: "id"
      sent_monthly: 5
      sent_weekly: 1
      status: "active"
  body_63:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  inline_response_200_57:
    type: "object"
    properties:
      tag:
        type: "string"
        description: "the actual tag as a string"
      reputation:
        type: "integer"
        description: "the tag's current reputation on a scale from 0 to 100."
        minimum: 0
        maximum: 100
      sent:
        type: "integer"
        description: "the total number of messages sent with this tag"
      hard_bounces:
        type: "integer"
        description: "the total number of hard bounces by messages with this tag"
      soft_bounces:
        type: "integer"
        description: "the total number of soft bounces by messages with this tag"
      rejects:
        type: "integer"
        description: "the total number of rejected messages with this tag"
      complaints:
        type: "integer"
        description: "the total number of spam complaints received for messages with\
          \ this tag"
      unsubs:
        type: "integer"
        description: "the total number of unsubscribe requests received for messages\
          \ with this tag"
      opens:
        type: "integer"
        description: "the total number of times messages with this tag have been opened"
      clicks:
        type: "integer"
        description: "the total number of times tracked URLs in messages with this\
          \ tag have been clicked"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent with this tag"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent with this tag"
    description: "a user-defined tag"
    example:
      rejects: 5
      hard_bounces: 1
      unique_clicks: 4
      unsubs: 7
      complaints: 2
      reputation: 8
      opens: 9
      clicks: 3
      soft_bounces: 5
      tag: "tag"
      sent: 6
      unique_opens: 2
  body_64:
    type: "object"
    required:
    - "key"
    - "tag"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      tag:
        type: "string"
        description: "a tag name"
  inline_response_200_58:
    type: "object"
    properties:
      tag:
        type: "string"
        description: "the actual tag as a string"
      reputation:
        type: "integer"
        description: "the tag's current reputation on a scale from 0 to 100."
        minimum: 0
        maximum: 100
      sent:
        type: "integer"
        description: "the total number of messages sent with this tag"
      hard_bounces:
        type: "integer"
        description: "the total number of hard bounces by messages with this tag"
      soft_bounces:
        type: "integer"
        description: "the total number of soft bounces by messages with this tag"
      rejects:
        type: "integer"
        description: "the total number of rejected messages with this tag"
      complaints:
        type: "integer"
        description: "the total number of spam complaints received for messages with\
          \ this tag"
      unsubs:
        type: "integer"
        description: "the total number of unsubscribe requests received for messages\
          \ with this tag"
      opens:
        type: "integer"
        description: "the total number of times messages with this tag have been opened"
      clicks:
        type: "integer"
        description: "the total number of times tracked URLs in messages with this\
          \ tag have been clicked"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent with this tag"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent with this tag"
    description: "the tag that was deleted"
    example:
      rejects: 5
      hard_bounces: 1
      unique_clicks: 4
      unsubs: 7
      complaints: 2
      reputation: 8
      opens: 9
      clicks: 3
      soft_bounces: 5
      tag: "tag"
      sent: 6
      unique_opens: 2
  body_65:
    type: "object"
    required:
    - "key"
    - "tag"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      tag:
        type: "string"
        description: "an existing tag name"
  inline_response_200_59_stats_today:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent with this tag so far today"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced with this tag so far today"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced with this tag so far today"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender so far\
          \ today"
      complaints:
        type: "integer"
        description: "the number of spam complaints with this tag so far today"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes with this tag so far today"
      opens:
        type: "integer"
        description: "the number of times emails have been opened with this tag so\
          \ far today"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent with this tag so\
          \ far today"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked with this tag so far\
          \ today"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent with this tag so\
          \ far today"
    description: "stats with this tag so far today"
    example:
      rejects: 7
      hard_bounces: 2
      unique_clicks: 1
      unsubs: 1
      complaints: 1
      opens: 1
      clicks: 7
      soft_bounces: 4
      sent: 3
      unique_opens: 6
  inline_response_200_59_stats_last_7_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent with this tag in the last 7 days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced with this tag in the last\
          \ 7 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced with this tag in the last\
          \ 7 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender in the\
          \ last 7 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints with this tag in the last 7 days"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes with this tag in the last 7 days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened with this tag in\
          \ the last 7 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent with this tag in\
          \ the last 7 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked with this tag in the\
          \ last 7 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent with this tag in\
          \ the last 7 days"
    description: "stats with this tag in the last 7 days"
    example:
      rejects: 9
      hard_bounces: 5
      unique_clicks: 6
      unsubs: 8
      complaints: 6
      opens: 9
      clicks: 3
      soft_bounces: 9
      sent: 4
      unique_opens: 6
  inline_response_200_59_stats_last_30_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent with this tag in the last 30 days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced with this tag in the last\
          \ 30 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced with this tag in the last\
          \ 30 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender in the\
          \ last 30 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints with this tag in the last 30 days"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes with this tag in the last 30 days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened with this tag in\
          \ the last 30 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent with this tag in\
          \ the last 30 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked with this tag in the\
          \ last 30 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent with this tag in\
          \ the last 30 days"
    description: "stats with this tag in the last 30 days"
    example:
      rejects: 6
      hard_bounces: 2
      unique_clicks: 0
      unsubs: 6
      complaints: 5
      opens: 3
      clicks: 7
      soft_bounces: 6
      sent: 1
      unique_opens: 3
  inline_response_200_59_stats_last_60_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent with this tag in the last 60 days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced with this tag in the last\
          \ 60 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced with this tag in the last\
          \ 60 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender in the\
          \ last 60 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints with this tag in the last 60 days"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes with this tag in the last 60 days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened with this tag in\
          \ the last 60 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent with this tag in\
          \ the last 60 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked with this tag in the\
          \ last 60 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent with this tag in\
          \ the last 60 days"
    description: "stats with this tag in the last 60 days"
    example:
      rejects: 4
      hard_bounces: 6
      unique_clicks: 5
      unsubs: 7
      complaints: 8
      opens: 3
      clicks: 7
      soft_bounces: 0
      sent: 7
      unique_opens: 3
  inline_response_200_59_stats_last_90_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent with this tag in the last 90 days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced with this tag in the last\
          \ 90 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced with this tag in the last\
          \ 90 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender in the\
          \ last 90 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints with this tag in the last 90 days"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes with this tag in the last 90 days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened with this tag in\
          \ the last 90 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent with this tag in\
          \ the last 90 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked with this tag in the\
          \ last 90 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent with this tag in\
          \ the last 90 days"
    description: "stats with this tag in the last 90 days"
    example:
      rejects: 6
      hard_bounces: 4
      unique_clicks: 0
      unsubs: 1
      complaints: 4
      opens: 4
      clicks: 9
      soft_bounces: 0
      sent: 3
      unique_opens: 7
  inline_response_200_59_stats:
    type: "object"
    properties:
      today:
        $ref: "#/definitions/inline_response_200_59_stats_today"
      last_7_days:
        $ref: "#/definitions/inline_response_200_59_stats_last_7_days"
      last_30_days:
        $ref: "#/definitions/inline_response_200_59_stats_last_30_days"
      last_60_days:
        $ref: "#/definitions/inline_response_200_59_stats_last_60_days"
      last_90_days:
        $ref: "#/definitions/inline_response_200_59_stats_last_90_days"
    description: "an aggregate summary of the tag's sending stats"
    example:
      last_7_days:
        rejects: 9
        hard_bounces: 5
        unique_clicks: 6
        unsubs: 8
        complaints: 6
        opens: 9
        clicks: 3
        soft_bounces: 9
        sent: 4
        unique_opens: 6
      today:
        rejects: 7
        hard_bounces: 2
        unique_clicks: 1
        unsubs: 1
        complaints: 1
        opens: 1
        clicks: 7
        soft_bounces: 4
        sent: 3
        unique_opens: 6
      last_90_days:
        rejects: 6
        hard_bounces: 4
        unique_clicks: 0
        unsubs: 1
        complaints: 4
        opens: 4
        clicks: 9
        soft_bounces: 0
        sent: 3
        unique_opens: 7
      last_30_days:
        rejects: 6
        hard_bounces: 2
        unique_clicks: 0
        unsubs: 6
        complaints: 5
        opens: 3
        clicks: 7
        soft_bounces: 6
        sent: 1
        unique_opens: 3
      last_60_days:
        rejects: 4
        hard_bounces: 6
        unique_clicks: 5
        unsubs: 7
        complaints: 8
        opens: 3
        clicks: 7
        soft_bounces: 0
        sent: 7
        unique_opens: 3
  inline_response_200_59:
    type: "object"
    properties:
      tag:
        type: "string"
        description: "the actual tag as a string"
      sent:
        type: "integer"
        description: "the total number of messages sent with this tag"
      hard_bounces:
        type: "integer"
        description: "the total number of hard bounces by messages with this tag"
      soft_bounces:
        type: "integer"
        description: "the total number of soft bounces by messages with this tag"
      rejects:
        type: "integer"
        description: "the total number of rejected messages with this tag"
      complaints:
        type: "integer"
        description: "the total number of spam complaints received for messages with\
          \ this tag"
      unsubs:
        type: "integer"
        description: "the total number of unsubscribe requests received for messages\
          \ with this tag"
      opens:
        type: "integer"
        description: "the total number of times messages with this tag have been opened"
      clicks:
        type: "integer"
        description: "the total number of times tracked URLs in messages with this\
          \ tag have been clicked"
      stats:
        $ref: "#/definitions/inline_response_200_59_stats"
    description: "the detailed information on the tag"
    example:
      rejects: 5
      hard_bounces: 6
      stats:
        last_7_days:
          rejects: 9
          hard_bounces: 5
          unique_clicks: 6
          unsubs: 8
          complaints: 6
          opens: 9
          clicks: 3
          soft_bounces: 9
          sent: 4
          unique_opens: 6
        today:
          rejects: 7
          hard_bounces: 2
          unique_clicks: 1
          unsubs: 1
          complaints: 1
          opens: 1
          clicks: 7
          soft_bounces: 4
          sent: 3
          unique_opens: 6
        last_90_days:
          rejects: 6
          hard_bounces: 4
          unique_clicks: 0
          unsubs: 1
          complaints: 4
          opens: 4
          clicks: 9
          soft_bounces: 0
          sent: 3
          unique_opens: 7
        last_30_days:
          rejects: 6
          hard_bounces: 2
          unique_clicks: 0
          unsubs: 6
          complaints: 5
          opens: 3
          clicks: 7
          soft_bounces: 6
          sent: 1
          unique_opens: 3
        last_60_days:
          rejects: 4
          hard_bounces: 6
          unique_clicks: 5
          unsubs: 7
          complaints: 8
          opens: 3
          clicks: 7
          soft_bounces: 0
          sent: 7
          unique_opens: 3
      unsubs: 2
      complaints: 5
      opens: 7
      clicks: 9
      soft_bounces: 1
      tag: "tag"
      sent: 0
  body_66:
    type: "object"
    required:
    - "key"
    - "tag"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      tag:
        type: "string"
        description: "an existing tag name"
  body_67:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  body_68:
    type: "object"
    required:
    - "key"
    - "name"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      name:
        type: "string"
        description: "the name for the new template - must be unique"
      from_email:
        type: "string"
        format: "email"
        description: "a default sending address for emails sent using this template"
      from_name:
        type: "string"
        description: "a default from name to be used"
      subject:
        type: "string"
        description: "a default subject line to be used"
      code:
        type: "string"
        description: "the HTML code for the template with mc:edit attributes for the\
          \ editable elements"
      text:
        type: "string"
        description: "a default text part to be used when sending with this template"
      publish:
        type: "boolean"
        description: "set to false to add a draft template without publishing"
      labels:
        type: "array"
        description: "an optional array of up to 10 labels to use for filtering templates"
        items:
          type: "string"
          description: "a single label"
          maxLength: 100
  inline_response_200_60:
    type: "object"
    properties:
      slug:
        type: "string"
        description: "the immutable unique code name of the template"
      name:
        type: "string"
        description: "the name of the template"
      labels:
        type: "array"
        description: "the list of labels applied to the template"
        items:
          type: "string"
          description: "a single label"
      code:
        type: "string"
        description: "the full HTML code of the template, with mc:edit attributes\
          \ marking the editable elements - draft version"
      subject:
        type: "string"
        description: "the subject line of the template, if provided - draft version"
      from_email:
        type: "string"
        description: "the default sender address for the template, if provided - draft\
          \ version"
      from_name:
        type: "string"
        description: "the default sender from name for the template, if provided -\
          \ draft version"
      text:
        type: "string"
        description: "the default text part of messages sent with the template, if\
          \ provided - draft version"
      publish_name:
        type: "string"
        description: "the same as the template name - kept as a separate field for\
          \ backwards compatibility"
      publish_code:
        type: "string"
        description: "the full HTML code of the template, with mc:edit attributes\
          \ marking the editable elements that are available as published, if it has\
          \ been published"
      publish_subject:
        type: "string"
        description: "the subject line of the template, if provided"
      publish_from_email:
        type: "string"
        format: "email"
        description: "the default sender address for the template, if provided"
      publish_from_name:
        type: "string"
        description: "the default sender from name for the template, if provided"
      publish_text:
        type: "string"
        description: "the default text part of messages sent with the template, if\
          \ provided"
      published_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was last published as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format, or null if it has not been published"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was first created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      updated_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was last modified as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
    description: "the information saved about the new template"
    example:
      code: "code"
      from_email: "from_email"
      subject: "subject"
      publish_from_email: "publish_from_email"
      created_at: "2000-01-23T04:56:07.000+00:00"
      from_name: "from_name"
      labels:
      - "labels"
      - "labels"
      publish_name: "publish_name"
      publish_subject: "publish_subject"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      publish_text: "publish_text"
      name: "name"
      text: "text"
      publish_from_name: "publish_from_name"
      published_at: "2000-01-23T04:56:07.000+00:00"
      slug: "slug"
      publish_code: "publish_code"
  body_69:
    type: "object"
    required:
    - "key"
    - "name"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      name:
        type: "string"
        description: "the immutable name of an existing template"
  inline_response_200_61:
    type: "object"
    properties:
      slug:
        type: "string"
        description: "the immutable unique code name of the template"
      name:
        type: "string"
        description: "the name of the template"
      labels:
        type: "array"
        description: "the list of labels applied to the template"
        items:
          type: "string"
          description: "a single label"
      code:
        type: "string"
        description: "the full HTML code of the template, with mc:edit attributes\
          \ marking the editable elements - draft version"
      subject:
        type: "string"
        description: "the subject line of the template, if provided - draft version"
      from_email:
        type: "string"
        description: "the default sender address for the template, if provided - draft\
          \ version"
      from_name:
        type: "string"
        description: "the default sender from name for the template, if provided -\
          \ draft version"
      text:
        type: "string"
        description: "the default text part of messages sent with the template, if\
          \ provided - draft version"
      publish_name:
        type: "string"
        description: "the same as the template name - kept as a separate field for\
          \ backwards compatibility"
      publish_code:
        type: "string"
        description: "the full HTML code of the template, with mc:edit attributes\
          \ marking the editable elements that are available as published, if it has\
          \ been published"
      publish_subject:
        type: "string"
        description: "the subject line of the template, if provided"
      publish_from_email:
        type: "string"
        format: "email"
        description: "the default sender address for the template, if provided"
      publish_from_name:
        type: "string"
        description: "the default sender from name for the template, if provided"
      publish_text:
        type: "string"
        description: "the default text part of messages sent with the template, if\
          \ provided"
      published_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was last published as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format, or null if it has not been published"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was first created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      updated_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was last modified as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
    description: "the requested template information"
    example:
      code: "code"
      from_email: "from_email"
      subject: "subject"
      publish_from_email: "publish_from_email"
      created_at: "2000-01-23T04:56:07.000+00:00"
      from_name: "from_name"
      labels:
      - "labels"
      - "labels"
      publish_name: "publish_name"
      publish_subject: "publish_subject"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      publish_text: "publish_text"
      name: "name"
      text: "text"
      publish_from_name: "publish_from_name"
      published_at: "2000-01-23T04:56:07.000+00:00"
      slug: "slug"
      publish_code: "publish_code"
  body_70:
    type: "object"
    required:
    - "key"
    - "name"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      name:
        type: "string"
        description: "the immutable name of an existing template"
      from_email:
        type: "string"
        format: "email"
        description: "the new default sending address"
      from_name:
        type: "string"
        description: "the new default from name"
      subject:
        type: "string"
        description: "the new default subject line"
      code:
        type: "string"
        description: "the new code for the template"
      text:
        type: "string"
        description: "the new default text part to be used"
      publish:
        type: "boolean"
        description: "set to false to update the draft version of the template without\
          \ publishing"
      labels:
        type: "array"
        description: "an optional array of up to 10 labels to use for filtering templates"
        items:
          type: "string"
          description: "a single label"
          maxLength: 100
  inline_response_200_62:
    type: "object"
    properties:
      slug:
        type: "string"
        description: "the immutable unique code name of the template"
      name:
        type: "string"
        description: "the name of the template"
      labels:
        type: "array"
        description: "the list of labels applied to the template"
        items:
          type: "string"
          description: "a single label"
      code:
        type: "string"
        description: "the full HTML code of the template, with mc:edit attributes\
          \ marking the editable elements - draft version"
      subject:
        type: "string"
        description: "the subject line of the template, if provided - draft version"
      from_email:
        type: "string"
        description: "the default sender address for the template, if provided - draft\
          \ version"
      from_name:
        type: "string"
        description: "the default sender from name for the template, if provided -\
          \ draft version"
      text:
        type: "string"
        description: "the default text part of messages sent with the template, if\
          \ provided - draft version"
      publish_name:
        type: "string"
        description: "the same as the template name - kept as a separate field for\
          \ backwards compatibility"
      publish_code:
        type: "string"
        description: "the full HTML code of the template, with mc:edit attributes\
          \ marking the editable elements that are available as published, if it has\
          \ been published"
      publish_subject:
        type: "string"
        description: "the subject line of the template, if provided"
      publish_from_email:
        type: "string"
        format: "email"
        description: "the default sender address for the template, if provided"
      publish_from_name:
        type: "string"
        description: "the default sender from name for the template, if provided"
      publish_text:
        type: "string"
        description: "the default text part of messages sent with the template, if\
          \ provided"
      published_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was last published as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format, or null if it has not been published"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was first created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      updated_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was last modified as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
    description: "the template that was updated"
    example:
      code: "code"
      from_email: "from_email"
      subject: "subject"
      publish_from_email: "publish_from_email"
      created_at: "2000-01-23T04:56:07.000+00:00"
      from_name: "from_name"
      labels:
      - "labels"
      - "labels"
      publish_name: "publish_name"
      publish_subject: "publish_subject"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      publish_text: "publish_text"
      name: "name"
      text: "text"
      publish_from_name: "publish_from_name"
      published_at: "2000-01-23T04:56:07.000+00:00"
      slug: "slug"
      publish_code: "publish_code"
  body_71:
    type: "object"
    required:
    - "key"
    - "name"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      name:
        type: "string"
        description: "the immutable name of an existing template"
  inline_response_200_63:
    type: "object"
    properties:
      slug:
        type: "string"
        description: "the immutable unique code name of the template"
      name:
        type: "string"
        description: "the name of the template"
      labels:
        type: "array"
        description: "the list of labels applied to the template"
        items:
          type: "string"
          description: "a single label"
      code:
        type: "string"
        description: "the full HTML code of the template, with mc:edit attributes\
          \ marking the editable elements - draft version"
      subject:
        type: "string"
        description: "the subject line of the template, if provided - draft version"
      from_email:
        type: "string"
        description: "the default sender address for the template, if provided - draft\
          \ version"
      from_name:
        type: "string"
        description: "the default sender from name for the template, if provided -\
          \ draft version"
      text:
        type: "string"
        description: "the default text part of messages sent with the template, if\
          \ provided - draft version"
      publish_name:
        type: "string"
        description: "the same as the template name - kept as a separate field for\
          \ backwards compatibility"
      publish_code:
        type: "string"
        description: "the full HTML code of the template, with mc:edit attributes\
          \ marking the editable elements that are available as published, if it has\
          \ been published"
      publish_subject:
        type: "string"
        description: "the subject line of the template, if provided"
      publish_from_email:
        type: "string"
        format: "email"
        description: "the default sender address for the template, if provided"
      publish_from_name:
        type: "string"
        description: "the default sender from name for the template, if provided"
      publish_text:
        type: "string"
        description: "the default text part of messages sent with the template, if\
          \ provided"
      published_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was last published as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format, or null if it has not been published"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was first created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      updated_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was last modified as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
    description: "the template that was published"
    example:
      code: "code"
      from_email: "from_email"
      subject: "subject"
      publish_from_email: "publish_from_email"
      created_at: "2000-01-23T04:56:07.000+00:00"
      from_name: "from_name"
      labels:
      - "labels"
      - "labels"
      publish_name: "publish_name"
      publish_subject: "publish_subject"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      publish_text: "publish_text"
      name: "name"
      text: "text"
      publish_from_name: "publish_from_name"
      published_at: "2000-01-23T04:56:07.000+00:00"
      slug: "slug"
      publish_code: "publish_code"
  body_72:
    type: "object"
    required:
    - "key"
    - "name"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      name:
        type: "string"
        description: "the immutable name of an existing template"
  inline_response_200_64:
    type: "object"
    properties:
      slug:
        type: "string"
        description: "the immutable unique code name of the template"
      name:
        type: "string"
        description: "the name of the template"
      labels:
        type: "array"
        description: "the list of labels applied to the template"
        items:
          type: "string"
          description: "a single label"
      code:
        type: "string"
        description: "the full HTML code of the template, with mc:edit attributes\
          \ marking the editable elements - draft version"
      subject:
        type: "string"
        description: "the subject line of the template, if provided - draft version"
      from_email:
        type: "string"
        description: "the default sender address for the template, if provided - draft\
          \ version"
      from_name:
        type: "string"
        description: "the default sender from name for the template, if provided -\
          \ draft version"
      text:
        type: "string"
        description: "the default text part of messages sent with the template, if\
          \ provided - draft version"
      publish_name:
        type: "string"
        description: "the same as the template name - kept as a separate field for\
          \ backwards compatibility"
      publish_code:
        type: "string"
        description: "the full HTML code of the template, with mc:edit attributes\
          \ marking the editable elements that are available as published, if it has\
          \ been published"
      publish_subject:
        type: "string"
        description: "the subject line of the template, if provided"
      publish_from_email:
        type: "string"
        format: "email"
        description: "the default sender address for the template, if provided"
      publish_from_name:
        type: "string"
        description: "the default sender from name for the template, if provided"
      publish_text:
        type: "string"
        description: "the default text part of messages sent with the template, if\
          \ provided"
      published_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was last published as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format, or null if it has not been published"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was first created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      updated_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was last modified as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
    description: "the template that was deleted"
    example:
      code: "code"
      from_email: "from_email"
      subject: "subject"
      publish_from_email: "publish_from_email"
      created_at: "2000-01-23T04:56:07.000+00:00"
      from_name: "from_name"
      labels:
      - "labels"
      - "labels"
      publish_name: "publish_name"
      publish_subject: "publish_subject"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      publish_text: "publish_text"
      name: "name"
      text: "text"
      publish_from_name: "publish_from_name"
      published_at: "2000-01-23T04:56:07.000+00:00"
      slug: "slug"
      publish_code: "publish_code"
  body_73:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      label:
        type: "string"
        description: "an optional label to filter the templates"
  inline_response_200_65:
    type: "object"
    properties:
      slug:
        type: "string"
        description: "the immutable unique code name of the template"
      name:
        type: "string"
        description: "the name of the template"
      labels:
        type: "array"
        description: "the list of labels applied to the template"
        items:
          type: "string"
          description: "a single label"
      code:
        type: "string"
        description: "the full HTML code of the template, with mc:edit attributes\
          \ marking the editable elements - draft version"
      subject:
        type: "string"
        description: "the subject line of the template, if provided - draft version"
      from_email:
        type: "string"
        description: "the default sender address for the template, if provided - draft\
          \ version"
      from_name:
        type: "string"
        description: "the default sender from name for the template, if provided -\
          \ draft version"
      text:
        type: "string"
        description: "the default text part of messages sent with the template, if\
          \ provided - draft version"
      publish_name:
        type: "string"
        description: "the same as the template name - kept as a separate field for\
          \ backwards compatibility"
      publish_code:
        type: "string"
        description: "the full HTML code of the template, with mc:edit attributes\
          \ marking the editable elements that are available as published, if it has\
          \ been published"
      publish_subject:
        type: "string"
        description: "the subject line of the template, if provided"
      publish_from_email:
        type: "string"
        format: "email"
        description: "the default sender address for the template, if provided"
      publish_from_name:
        type: "string"
        description: "the default sender from name for the template, if provided"
      publish_text:
        type: "string"
        description: "the default text part of messages sent with the template, if\
          \ provided"
      published_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was last published as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format, or null if it has not been published"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was first created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      updated_at:
        type: "string"
        format: "date-time"
        description: "the date and time the template was last modified as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
    description: "the information on each template in the account"
    example:
      code: "code"
      from_email: "from_email"
      subject: "subject"
      publish_from_email: "publish_from_email"
      created_at: "2000-01-23T04:56:07.000+00:00"
      from_name: "from_name"
      labels:
      - "labels"
      - "labels"
      publish_name: "publish_name"
      publish_subject: "publish_subject"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      publish_text: "publish_text"
      name: "name"
      text: "text"
      publish_from_name: "publish_from_name"
      published_at: "2000-01-23T04:56:07.000+00:00"
      slug: "slug"
      publish_code: "publish_code"
  body_74:
    type: "object"
    required:
    - "key"
    - "name"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      name:
        type: "string"
        description: "the name of an existing template"
  templatesrender_template_content:
    type: "object"
    required:
    - "content"
    - "name"
    properties:
      name:
        type: "string"
        description: "the name of the mc:edit editable region to inject into"
      content:
        type: "string"
        description: "the content to inject"
    description: "the injection of a single piece of content into a single editable\
      \ region"
  templatesrender_merge_vars:
    type: "object"
    properties:
      name:
        type: "string"
        description: "the merge variable's name. Merge variable names are case-insensitive\
          \ and may not start with _"
      content:
        type: "string"
        description: "the merge variable's content"
    description: "a single merge variable"
  body_75:
    type: "object"
    required:
    - "key"
    - "template_content"
    - "template_name"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      template_name:
        type: "string"
        description: "the immutable name of a template that exists in the user's account"
      template_content:
        type: "array"
        description: "an array of template content to render. Each item in the array\
          \ should be a struct with two keys - name: the name of the content block\
          \ to set the content for, and content: the actual content to put into the\
          \ block"
        items:
          $ref: "#/definitions/templatesrender_template_content"
      merge_vars:
        type: "array"
        description: "optional merge variables to use for injecting merge field content.\
          \ If this is not provided, no merge fields will be replaced."
        items:
          $ref: "#/definitions/templatesrender_merge_vars"
  inline_response_200_66:
    type: "object"
    properties:
      html:
        type: "string"
        description: "the rendered HTML as a string"
    description: "the result of rendering the given template with the content and\
      \ merge field values injected"
    example:
      html: "html"
  body_76:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  inline_response_200_67:
    type: "object"
    properties:
      url:
        type: "string"
        description: "the URL to be tracked"
      sent:
        type: "integer"
        description: "the number of emails that contained the URL"
      clicks:
        type: "integer"
        description: "the number of times the URL has been clicked from a tracked\
          \ email"
      unique_clicks:
        type: "integer"
        description: "the number of unique emails that have generated clicks for this\
          \ URL"
    description: "the individual URL stats"
    example:
      unique_clicks: 1
      clicks: 6
      sent: 0
      url: "url"
  body_77:
    type: "object"
    required:
    - "key"
    - "q"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      q:
        type: "string"
        description: "a search query"
  inline_response_200_68:
    type: "object"
    properties:
      url:
        type: "string"
        description: "the URL to be tracked"
      sent:
        type: "integer"
        description: "the number of emails that contained the URL"
      clicks:
        type: "integer"
        description: "the number of times the URL has been clicked from a tracked\
          \ email"
      unique_clicks:
        type: "integer"
        description: "the number of unique emails that have generated clicks for this\
          \ URL"
    description: "the URL matching the query"
    example:
      unique_clicks: 1
      clicks: 6
      sent: 0
      url: "url"
  body_78:
    type: "object"
    required:
    - "key"
    - "url"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      url:
        type: "string"
        description: "an existing URL"
  inline_response_200_69:
    type: "object"
    properties:
      time:
        type: "string"
        format: "date-time"
        description: "the hour as a UTC date string in YYYY-MM-DD HH:MM:SS format"
      sent:
        type: "integer"
        description: "the number of emails that were sent with the URL during the\
          \ hour"
      clicks:
        type: "integer"
        description: "the number of times the URL was clicked during the hour"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks generated for emails sent with this\
          \ URL during the hour"
    description: "the information for a single hour"
    example:
      unique_clicks: 1
      clicks: 6
      time: "2000-01-23T04:56:07.000+00:00"
      sent: 0
  body_79:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  urlstrackingdomains_cname:
    type: "object"
    properties:
      valid:
        type: "boolean"
        description: "whether the domain's CNAME record is valid for use with Mandrill"
      valid_after:
        type: "string"
        description: "when the domain's CNAME record will be considered valid for\
          \ use with Mandrill as a UTC string in YYYY-MM-DD HH:MM:SS format. If set,\
          \ this indicates that the record is valid now, but was previously invalid,\
          \ and Mandrill will wait until the record's TTL elapses to start using it."
      error:
        type: "string"
        description: "an error describing the CNAME record, or null if the record\
          \ is correct"
    description: "details about the domain's CNAME record"
    example:
      valid: true
      valid_after: "valid_after"
      error: "error"
  inline_response_200_70:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "the tracking domain name"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the tracking domain was added as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      last_tested_at:
        type: "string"
        format: "date-time"
        description: "when the domain's DNS settings were last tested as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      cname:
        $ref: "#/definitions/urlstrackingdomains_cname"
      valid_tracking:
        type: "boolean"
        description: "whether this domain can be used as a tracking domain for email."
    description: "the individual tracking domain"
    example:
      last_tested_at: "2000-01-23T04:56:07.000+00:00"
      valid_tracking: true
      domain: "domain"
      cname:
        valid: true
        valid_after: "valid_after"
        error: "error"
      created_at: "2000-01-23T04:56:07.000+00:00"
  body_80:
    type: "object"
    required:
    - "domain"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      domain:
        type: "string"
        description: "a domain name"
  inline_response_200_71:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "the tracking domain name"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the tracking domain was added as a UTC\
          \ string in YYYY-MM-DD HH:MM:SS format"
      last_tested_at:
        type: "string"
        format: "date-time"
        description: "when the domain's DNS settings were last tested as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      cname:
        $ref: "#/definitions/urlstrackingdomains_cname"
      valid_tracking:
        type: "boolean"
        description: "whether this domain can be used as a tracking domain for email."
    description: "information about the tracking domain"
    example:
      last_tested_at: "2000-01-23T04:56:07.000+00:00"
      valid_tracking: true
      domain: "domain"
      cname:
        valid: true
        valid_after: "valid_after"
        error: "error"
      created_at: "2000-01-23T04:56:07.000+00:00"
  body_81:
    type: "object"
    required:
    - "domain"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      domain:
        type: "string"
        description: "an existing tracking domain name"
  body_82:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  inline_response_200_72_stats_today:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent for this user so far today"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced for this user so far today"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced for this user so far today"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender so far\
          \ today"
      complaints:
        type: "integer"
        description: "the number of spam complaints for this user so far today"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes for this user so far today"
      opens:
        type: "integer"
        description: "the number of times emails have been opened for this user so\
          \ far today"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this user so\
          \ far today"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked for this user so far\
          \ today"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this user so\
          \ far today"
    description: "stats for this user so far today"
    example:
      rejects: 7
      hard_bounces: 5
      unique_clicks: 1
      unsubs: 3
      complaints: 9
      opens: 2
      clicks: 7
      soft_bounces: 2
      sent: 5
      unique_opens: 4
  inline_response_200_72_stats_last_7_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent for this user in the last 7 days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced for this user in the last\
          \ 7 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced for this user in the last\
          \ 7 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender in the\
          \ last 7 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints for this user in the last 7 days"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes for this user in the last 7 days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened for this user in\
          \ the last 7 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this user in\
          \ the last 7 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked for this user in the\
          \ last 7 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this user in\
          \ the last 7 days"
    description: "stats for this user in the last 7 days"
    example:
      rejects: 7
      hard_bounces: 1
      unique_clicks: 6
      unsubs: 4
      complaints: 1
      opens: 5
      clicks: 9
      soft_bounces: 6
      sent: 1
      unique_opens: 9
  inline_response_200_72_stats_last_30_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent for this user in the last 30 days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced for this user in the last\
          \ 30 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced for this user in the last\
          \ 30 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender in the\
          \ last 30 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints for this user in the last 30 days"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes for this user in the last 30 days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened for this user in\
          \ the last 30 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this user in\
          \ the last 30 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked for this user in the\
          \ last 30 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this user in\
          \ the last 30 days"
    description: "stats for this user in the last 30 days"
    example:
      rejects: 3
      hard_bounces: 9
      unique_clicks: 5
      unsubs: 1
      complaints: 6
      opens: 2
      clicks: 6
      soft_bounces: 6
      sent: 8
      unique_opens: 6
  inline_response_200_72_stats_last_60_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent for this user in the last 60 days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced for this user in the last\
          \ 60 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced for this user in the last\
          \ 60 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender in the\
          \ last 60 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints for this user in the last 60 days"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes for this user in the last 60 days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened for this user in\
          \ the last 60 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this user in\
          \ the last 60 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked for this user in the\
          \ last 60 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this user in\
          \ the last 60 days"
    description: "stats for this user in the last 60 days"
    example:
      rejects: 7
      hard_bounces: 3
      unique_clicks: 8
      unsubs: 7
      complaints: 0
      opens: 6
      clicks: 4
      soft_bounces: 3
      sent: 6
      unique_opens: 0
  inline_response_200_72_stats_last_90_days:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent for this user in the last 90 days"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced for this user in the last\
          \ 90 days"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced for this user in the last\
          \ 90 days"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this sender in the\
          \ last 90 days"
      complaints:
        type: "integer"
        description: "the number of spam complaints for this user in the last 90 days"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes for this user in the last 90 days"
      opens:
        type: "integer"
        description: "the number of times emails have been opened for this user in\
          \ the last 90 days"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent for this user in\
          \ the last 90 days"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked for this user in the\
          \ last 90 days"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent for this user in\
          \ the last 90 days"
    description: "stats for this user in the last 90 days"
    example:
      rejects: 7
      hard_bounces: 3
      unique_clicks: 4
      unsubs: 3
      complaints: 5
      opens: 4
      clicks: 6
      soft_bounces: 3
      sent: 7
      unique_opens: 0
  inline_response_200_72_stats_all_time:
    type: "object"
    properties:
      sent:
        type: "integer"
        description: "the number of emails sent in the lifetime of the user's account"
      hard_bounces:
        type: "integer"
        description: "the number of emails hard bounced in the lifetime of the user's\
          \ account"
      soft_bounces:
        type: "integer"
        description: "the number of emails soft bounced in the lifetime of the user's\
          \ account"
      rejects:
        type: "integer"
        description: "the number of emails rejected for sending this user so far today"
      complaints:
        type: "integer"
        description: "the number of spam complaints in the lifetime of the user's\
          \ account"
      unsubs:
        type: "integer"
        description: "the number of unsubscribes in the lifetime of the user's account"
      opens:
        type: "integer"
        description: "the number of times emails have been opened in the lifetime\
          \ of the user's account"
      unique_opens:
        type: "integer"
        description: "the number of unique opens for emails sent in the lifetime of\
          \ the user's account"
      clicks:
        type: "integer"
        description: "the number of URLs that have been clicked in the lifetime of\
          \ the user's account"
      unique_clicks:
        type: "integer"
        description: "the number of unique clicks for emails sent in the lifetime\
          \ of the user's account"
    description: "tats for the lifetime of the user's account"
    example:
      rejects: 9
      hard_bounces: 4
      unique_clicks: 4
      unsubs: 9
      complaints: 0
      opens: 0
      clicks: 5
      soft_bounces: 7
      sent: 1
      unique_opens: 7
  inline_response_200_72_stats:
    type: "object"
    properties:
      today:
        $ref: "#/definitions/inline_response_200_72_stats_today"
      last_7_days:
        $ref: "#/definitions/inline_response_200_72_stats_last_7_days"
      last_30_days:
        $ref: "#/definitions/inline_response_200_72_stats_last_30_days"
      last_60_days:
        $ref: "#/definitions/inline_response_200_72_stats_last_60_days"
      last_90_days:
        $ref: "#/definitions/inline_response_200_72_stats_last_90_days"
      all_time:
        $ref: "#/definitions/inline_response_200_72_stats_all_time"
    description: "an aggregate summary of the account's sending stats"
    example:
      last_7_days:
        rejects: 7
        hard_bounces: 1
        unique_clicks: 6
        unsubs: 4
        complaints: 1
        opens: 5
        clicks: 9
        soft_bounces: 6
        sent: 1
        unique_opens: 9
      all_time:
        rejects: 9
        hard_bounces: 4
        unique_clicks: 4
        unsubs: 9
        complaints: 0
        opens: 0
        clicks: 5
        soft_bounces: 7
        sent: 1
        unique_opens: 7
      today:
        rejects: 7
        hard_bounces: 5
        unique_clicks: 1
        unsubs: 3
        complaints: 9
        opens: 2
        clicks: 7
        soft_bounces: 2
        sent: 5
        unique_opens: 4
      last_90_days:
        rejects: 7
        hard_bounces: 3
        unique_clicks: 4
        unsubs: 3
        complaints: 5
        opens: 4
        clicks: 6
        soft_bounces: 3
        sent: 7
        unique_opens: 0
      last_30_days:
        rejects: 3
        hard_bounces: 9
        unique_clicks: 5
        unsubs: 1
        complaints: 6
        opens: 2
        clicks: 6
        soft_bounces: 6
        sent: 8
        unique_opens: 6
      last_60_days:
        rejects: 7
        hard_bounces: 3
        unique_clicks: 8
        unsubs: 7
        complaints: 0
        opens: 6
        clicks: 4
        soft_bounces: 3
        sent: 6
        unique_opens: 0
  inline_response_200_72:
    type: "object"
    properties:
      username:
        type: "string"
        description: "the username of the user (used for SMTP authentication)"
      created_at:
        type: "string"
        description: "the date and time that the user's Mandrill account was created\
          \ as a UTC string in YYYY-MM-DD HH:MM:SS format"
      public_id:
        type: "string"
        description: "a unique, permanent identifier for this user"
      reputation:
        type: "integer"
        description: "the reputation of the user on a scale from 0 to 100, with 75\
          \ generally being a \"good\" reputation"
      hourly_quota:
        type: "integer"
        description: "the maximum number of emails Mandrill will deliver for this\
          \ user each hour. Any emails beyond that will be accepted and queued for\
          \ later delivery. Users with higher reputations will have higher hourly\
          \ quotas"
      backlog:
        type: "integer"
        description: "the number of emails that are queued for delivery due to exceeding\
          \ your monthly or hourly quotas"
      stats:
        $ref: "#/definitions/inline_response_200_72_stats"
    description: "the user information including username, key, reputation, quota,\
      \ and historical sending stats"
    example:
      hourly_quota: 6
      backlog: 1
      stats:
        last_7_days:
          rejects: 7
          hard_bounces: 1
          unique_clicks: 6
          unsubs: 4
          complaints: 1
          opens: 5
          clicks: 9
          soft_bounces: 6
          sent: 1
          unique_opens: 9
        all_time:
          rejects: 9
          hard_bounces: 4
          unique_clicks: 4
          unsubs: 9
          complaints: 0
          opens: 0
          clicks: 5
          soft_bounces: 7
          sent: 1
          unique_opens: 7
        today:
          rejects: 7
          hard_bounces: 5
          unique_clicks: 1
          unsubs: 3
          complaints: 9
          opens: 2
          clicks: 7
          soft_bounces: 2
          sent: 5
          unique_opens: 4
        last_90_days:
          rejects: 7
          hard_bounces: 3
          unique_clicks: 4
          unsubs: 3
          complaints: 5
          opens: 4
          clicks: 6
          soft_bounces: 3
          sent: 7
          unique_opens: 0
        last_30_days:
          rejects: 3
          hard_bounces: 9
          unique_clicks: 5
          unsubs: 1
          complaints: 6
          opens: 2
          clicks: 6
          soft_bounces: 6
          sent: 8
          unique_opens: 6
        last_60_days:
          rejects: 7
          hard_bounces: 3
          unique_clicks: 8
          unsubs: 7
          complaints: 0
          opens: 6
          clicks: 4
          soft_bounces: 3
          sent: 6
          unique_opens: 0
      created_at: "created_at"
      reputation: 0
      username: "username"
      public_id: "public_id"
  body_83:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  body_84:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  inline_response_200_73:
    type: "object"
    properties:
      PING:
        type: "string"
        example: "PONG!"
        description: "a simple pong response"
    description: "a struct with one key \"PING\" with a static value \"PONG!\""
    example:
      PING: "PONG!"
  body_85:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  body_86:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
  inline_response_200_74:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "a unique integer indentifier for the webhook"
      url:
        type: "string"
        description: "The URL that the event data will be posted to"
      description:
        type: "string"
        description: "a description of the webhook"
      auth_key:
        type: "string"
        description: "the key used to requests for this webhook"
      events:
        type: "array"
        description: "The message events that will be posted to the hook"
        items:
          type: "string"
          description: "the individual message event"
          enum:
          - "send"
          - "hard_bounce"
          - "soft_bounce"
          - "open"
          - "click"
          - "spam"
          - "unsub"
          - "reject"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the webhook was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      last_sent_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the webhook last successfully received\
          \ events as a UTC string in YYYY-MM-DD HH:MM:SS format"
      batches_sent:
        type: "integer"
        description: "the number of event batches that have ever been sent to this\
          \ webhook"
      events_sent:
        type: "integer"
        description: "the total number of events that have ever been sent to this\
          \ webhook"
      last_error:
        type: "string"
        description: "if we've ever gotten an error trying to post to this webhook,\
          \ the last error that we've seen"
    description: "the individual webhook info"
    example:
      last_sent_at: "2000-01-23T04:56:07.000+00:00"
      events_sent: 1
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      auth_key: "auth_key"
      batches_sent: 6
      last_error: "last_error"
      url: "url"
      events:
      - "send"
      - "send"
  body_87:
    type: "object"
    required:
    - "key"
    - "url"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      url:
        type: "string"
        description: "the URL to POST batches of events"
      description:
        type: "string"
        description: "an optional description of the webhook"
      events:
        type: "array"
        description: "an optional list of events that will be posted to the webhook"
        items:
          type: "string"
          description: "the individual event to listen for"
          enum:
          - "send"
          - "hard_bounce"
          - "soft_bounce"
          - "open"
          - "click"
          - "spam"
          - "unsub"
          - "reject"
          - "blacklist"
          - "whitelist"
  inline_response_200_75:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "a unique integer indentifier for the webhook"
      url:
        type: "string"
        description: "The URL that the event data will be posted to"
      description:
        type: "string"
        description: "a description of the webhook"
      auth_key:
        type: "string"
        description: "the key used to requests for this webhook"
      events:
        type: "array"
        description: "The message events that will be posted to the hook"
        items:
          type: "string"
          description: "the individual message event"
          enum:
          - "send"
          - "hard_bounce"
          - "soft_bounce"
          - "open"
          - "click"
          - "spam"
          - "unsub"
          - "reject"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the webhook was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      last_sent_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the webhook last successfully received\
          \ events as a UTC string in YYYY-MM-DD HH:MM:SS format"
      batches_sent:
        type: "integer"
        description: "the number of event batches that have ever been sent to this\
          \ webhook"
      events_sent:
        type: "integer"
        description: "the total number of events that have ever been sent to this\
          \ webhook"
      last_error:
        type: "string"
        description: "if we've ever gotten an error trying to post to this webhook,\
          \ the last error that we've seen"
    description: "the information saved about the new webhook"
    example:
      last_sent_at: "2000-01-23T04:56:07.000+00:00"
      events_sent: 1
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      auth_key: "auth_key"
      batches_sent: 6
      last_error: "last_error"
      url: "url"
      events:
      - "send"
      - "send"
  body_88:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "integer"
        description: "the unique identifier of a webhook belonging to this account"
  inline_response_200_76:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "a unique integer indentifier for the webhook"
      url:
        type: "string"
        description: "The URL that the event data will be posted to"
      description:
        type: "string"
        description: "a description of the webhook"
      auth_key:
        type: "string"
        description: "the key used to requests for this webhook"
      events:
        type: "array"
        description: "The message events that will be posted to the hook"
        items:
          type: "string"
          description: "the individual message event"
          enum:
          - "send"
          - "hard_bounce"
          - "soft_bounce"
          - "open"
          - "click"
          - "spam"
          - "unsub"
          - "reject"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the webhook was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      last_sent_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the webhook last successfully received\
          \ events as a UTC string in YYYY-MM-DD HH:MM:SS format"
      batches_sent:
        type: "integer"
        description: "the number of event batches that have ever been sent to this\
          \ webhook"
      events_sent:
        type: "integer"
        description: "the total number of events that have ever been sent to this\
          \ webhook"
      last_error:
        type: "string"
        description: "if we've ever gotten an error trying to post to this webhook,\
          \ the last error that we've seen"
    description: "the information about the webhook"
    example:
      last_sent_at: "2000-01-23T04:56:07.000+00:00"
      events_sent: 1
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      auth_key: "auth_key"
      batches_sent: 6
      last_error: "last_error"
      url: "url"
      events:
      - "send"
      - "send"
  body_89:
    type: "object"
    required:
    - "id"
    - "key"
    - "url"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "number"
        description: "the unique identifier of a webhook belonging to this account"
      url:
        type: "string"
        description: "the URL to POST batches of events. Requires webhook to exist."
      description:
        type: "string"
        description: "an optional description of the webhook"
      events:
        type: "array"
        description: "an optional list of events that will be posted to the webhook"
        items:
          type: "string"
          description: "the individual event to listen for"
          enum:
          - "send"
          - "hard_bounce"
          - "soft_bounce"
          - "open"
          - "click"
          - "spam"
          - "unsub"
          - "reject"
          - "blacklist"
          - "whitelist"
  inline_response_200_77:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "a unique integer indentifier for the webhook"
      url:
        type: "string"
        description: "The URL that the event data will be posted to"
      description:
        type: "string"
        description: "a description of the webhook"
      auth_key:
        type: "string"
        description: "the key used to requests for this webhook"
      events:
        type: "array"
        description: "The message events that will be posted to the hook"
        items:
          type: "string"
          description: "the individual message event"
          enum:
          - "send"
          - "hard_bounce"
          - "soft_bounce"
          - "open"
          - "click"
          - "spam"
          - "unsub"
          - "reject"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the webhook was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      last_sent_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the webhook last successfully received\
          \ events as a UTC string in YYYY-MM-DD HH:MM:SS format"
      batches_sent:
        type: "integer"
        description: "the number of event batches that have ever been sent to this\
          \ webhook"
      events_sent:
        type: "integer"
        description: "the total number of events that have ever been sent to this\
          \ webhook"
      last_error:
        type: "string"
        description: "if we've ever gotten an error trying to post to this webhook,\
          \ the last error that we've seen"
    description: "the information for the updated webhook"
    example:
      last_sent_at: "2000-01-23T04:56:07.000+00:00"
      events_sent: 1
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      auth_key: "auth_key"
      batches_sent: 6
      last_error: "last_error"
      url: "url"
      events:
      - "send"
      - "send"
  body_90:
    type: "object"
    required:
    - "id"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      id:
        type: "integer"
        description: "the unique identifier of a webhook belonging to this account"
  inline_response_200_78:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "a unique integer indentifier for the webhook"
      url:
        type: "string"
        description: "The URL that the event data will be posted to"
      description:
        type: "string"
        description: "a description of the webhook"
      auth_key:
        type: "string"
        description: "the key used to requests for this webhook"
      events:
        type: "array"
        description: "The message events that will be posted to the hook"
        items:
          type: "string"
          description: "the individual message event"
          enum:
          - "send"
          - "hard_bounce"
          - "soft_bounce"
          - "open"
          - "click"
          - "spam"
          - "unsub"
          - "reject"
      created_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the webhook was created as a UTC string\
          \ in YYYY-MM-DD HH:MM:SS format"
      last_sent_at:
        type: "string"
        format: "date-time"
        description: "the date and time that the webhook last successfully received\
          \ events as a UTC string in YYYY-MM-DD HH:MM:SS format"
      batches_sent:
        type: "integer"
        description: "the number of event batches that have ever been sent to this\
          \ webhook"
      events_sent:
        type: "integer"
        description: "the total number of events that have ever been sent to this\
          \ webhook"
      last_error:
        type: "string"
        description: "if we've ever gotten an error trying to post to this webhook,\
          \ the last error that we've seen"
    description: "the information for the deleted webhook"
    example:
      last_sent_at: "2000-01-23T04:56:07.000+00:00"
      events_sent: 1
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      auth_key: "auth_key"
      batches_sent: 6
      last_error: "last_error"
      url: "url"
      events:
      - "send"
      - "send"
  body_91:
    type: "object"
    required:
    - "email"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      email:
        type: "string"
        format: "email"
        description: "an email address to add to the allowlist"
      comment:
        type: "string"
        description: "an optional description of why the email was added to the allowlist"
        maxLength: 255
  body_92:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      email:
        type: "string"
        format: "email"
        description: "an optional email address or prefix to search by"
  body_93:
    type: "object"
    required:
    - "email"
    - "key"
    properties:
      key:
        type: "string"
        description: "a valid api key"
      email:
        type: "string"
        format: "email"
        description: "the email address to remove from the allowlist"
x-doc-structure:
  resources:
    allowlists:
      title: "Allowlists"
      description: "Add, list, or delete from your Rejection Allowlist."
      paths:
      - "/allowlists/add"
      - "/allowlists/list"
      - "/allowlists/delete"
    exports:
      title: "Exports"
      description: "Start an export, or get information on export jobs in progress."
      paths:
      - "/exports/info"
      - "/exports/list"
      - "/exports/rejects"
      - "/exports/whitelist"
      - "/exports/allowlist"
      - "/exports/activity"
    inbound:
      title: "Inbound"
      description: "Manage your inbound domains and routes."
      paths:
      - "/inbound/domains"
      - "/inbound/add-domain"
      - "/inbound/check-domain"
      - "/inbound/delete-domain"
      - "/inbound/routes"
      - "/inbound/add-route"
      - "/inbound/update-route"
      - "/inbound/delete-route"
      - "/inbound/send-raw"
    ips:
      title: "IPs"
      description: "Request and manage Dedicated IPs for your account, and set up\
        \ reverse DNS."
      paths:
      - "/ips/list"
      - "/ips/info"
      - "/ips/provision"
      - "/ips/start-warmup"
      - "/ips/cancel-warmup"
      - "/ips/set-pool"
      - "/ips/delete"
      - "/ips/list-pools"
      - "/ips/pool-info"
      - "/ips/create-pool"
      - "/ips/delete-pool"
      - "/ips/check-custom-dns"
      - "/ips/set-custom-dns"
    messages:
      title: "Messages"
      description: "Send, schedule, or get information on your emails."
      paths:
      - "/messages/send"
      - "/messages/send-template"
      - "/messages/search"
      - "/messages/search-time-series"
      - "/messages/info"
      - "/messages/content"
      - "/messages/parse"
      - "/messages/send-raw"
      - "/messages/list-scheduled"
      - "/messages/cancel-scheduled"
      - "/messages/reschedule"
    metadata:
      title: "Metadata"
      description: "Manage your custom metadata fields in your account."
      paths:
      - "/metadata/list"
      - "/metadata/add"
      - "/metadata/update"
      - "/metadata/delete"
    rejects:
      title: "Rejects"
      description: "Add, list, or delete from your Rejection Denylist."
      paths:
      - "/rejects/add"
      - "/rejects/list"
      - "/rejects/delete"
    senders:
      title: "Senders"
      description: "Manage or get information about your sending domains."
      paths:
      - "/senders/list"
      - "/senders/domains"
      - "/senders/add-domain"
      - "/senders/check-domain"
      - "/senders/verify-domain"
      - "/senders/info"
      - "/senders/time-series"
    subaccounts:
      title: "Subaccounts"
      description: "Manage your subaccounts, including the abilitiy to pause and resume\
        \ sending."
      paths:
      - "/subaccounts/list"
      - "/subaccounts/add"
      - "/subaccounts/info"
      - "/subaccounts/update"
      - "/subaccounts/delete"
      - "/subaccounts/pause"
      - "/subaccounts/resume"
    tags:
      title: "Tags"
      description: "List, delete, or get information on your Tags and their sending\
        \ statistics."
      paths:
      - "/tags/list"
      - "/tags/delete"
      - "/tags/info"
      - "/tags/time-series"
      - "/tags/all-time-series"
    templates:
      title: "Templates"
      description: "Manage the Templates in your account."
      paths:
      - "/templates/add"
      - "/templates/info"
      - "/templates/update"
      - "/templates/publish"
      - "/templates/delete"
      - "/templates/list"
      - "/templates/time-series"
      - "/templates/render"
    urls:
      title: "URLs"
      description: "Manage your tracking domains. Some of these endpoints may be deprecated."
      paths:
      - "/urls/list"
      - "/urls/search"
      - "/urls/time-series"
      - "/urls/tracking-domains"
      - "/urls/add-tracking-domain"
      - "/urls/check-tracking-domain"
    users:
      title: "Users"
      description: "Get information about your account, or ping Transactional."
      paths:
      - "/users/info"
      - "/users/ping"
      - "/users/ping2"
      - "/users/senders"
    webhooks:
      title: "Webhooks"
      description: "Manage the webhooks in your account."
      paths:
      - "/webhooks/list"
      - "/webhooks/add"
      - "/webhooks/info"
      - "/webhooks/update"
      - "/webhooks/delete"
    whitelists:
      title: "Whitelists"
      description: "Add, list, or delete from your Rejection Allowlist. These endpoints\
        \ are being replaced with a series of functionally identical endpoints called\
        \ /allowlists."
      paths:
      - "/whitelists/add"
      - "/whitelists/list"
      - "/whitelists/delete"
